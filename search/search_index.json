{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to zAppbuild","text":""},{"location":"#how-zappbuild-works","title":"How zAppBuild works","text":"<p>The zAppBuild repository is intended to be cloned to a single location on Unix Systems Services (USS) and used to build all of your z/OS applications. This is done by simply copying the supplied <code>application-conf</code> folder (located in the samples folder) to the application source repository you want to build and then verify/update the contained default configuration property values to ensure they meet the build requirements of your application. See the included MortgageApplication sample for an example of an application that has been modified to be built by zAppBuild.  </p> <p>IMPORTANT : The datasets.properties must be configured for your build machine before executing a build!  See build-conf/README.md for more information.</p>"},{"location":"#supported-languages","title":"Supported Languages","text":"<p>The zAppBuild sample provides the following language build scripts by default:</p> <ul> <li>Assembler.groovy</li> <li>BMS.groovy</li> <li>Cobol.groovy</li> <li>LinkEdit.groovy (for building link cards)</li> <li>PLI.groovy</li> <li>DBDgen.groovy</li> <li>PSBgen.groovy</li> <li>MFS.groovy</li> <li>ZunitConfig.groovy</li> </ul> <p>All language scripts both compile and optionally link-edit programs. The language build scripts are intended to be useful out of the box but depending on the complexity of your applications' build requirements, may require modifications to meet your development team's needs.  By following the examples used in the existing language build scripts of keeping all application specific references out of the build scripts and instead using configuration properties with strong default values, the zAppBuild sample can continue to be a generic build solution for all of your specific applications.</p>"},{"location":"#build-scope","title":"Build Scope","text":"<p>The build scope of zAppBuild is an application which is loosely defined as one or more Git repositories containing all the z/OS source files required to build the application.  There are no specific rules as to the structure of the repositories except that one repository must contain the high level <code>application-conf</code> folder provided by zAppBuild which contains all of the configuration properties for building the application programs.  </p> <p>NOTE: All source repositories that make up the application must be cloned on the build machine under a common workspace  directory prior to calling build.groovy.</p> <p>zAppBuild supports a number of build scenarios:</p> <ul> <li>Single Program - Build a single program in the application.</li> <li>List of Programs - Build a list of programs provided by a text file.</li> <li>Full Build - Build all programs (or buildable files) of an application.</li> <li>Impact Build - Build only programs impacted by source files that have changed since the last successful build.</li> <li>Impact Build with baseline reference - Build only programs impacted by source files that have changed by diff'ing to a previous configuration reference.</li> <li>Topic Branch Build - Detects when building a topic branch for the first time and will automatically clone the dependency data collections from the main build branch in order to avoid having to rescan the entire application.</li> <li>Merge Build - Build only changed programs which will be merged back into the mainBuildBranch by using a triple-dot git diff. </li> <li>Scan Source - Skip the actual building and only scan source files to store dependency data in collection (migration scenario).</li> <li>Scan Source + Outputs - Skip the actual building and only scan source files and existing load modules to dependency data in source and output collection (migration scenario with static linkage scenarios).</li> </ul> <p>Links to additional documentation is provided in the table below.  Instructions on invoking a zAppBuild is included in BUILD.md as well as invocation samples for the above mentioned build scenarios including sample console log.</p> <p>zAppBuild comes with a set of reporting features. It helps development teams to understand the impact of changed files across multiple applications. Another feature helps to identify conflicts due to concurrent development activities within their application. An overview of these features are documented in REPORTS.md.</p>"},{"location":"#repository-legend","title":"Repository Legend","text":"Folder/File Description Documentation Link build-conf This folder contains global configuration properties used by build.groovy and language build scripts. build-conf/README.md languages This folder contains the language specific build scripts that are associated to build files via script mappings (see <code>samples/application-conf/files.properties</code>) and called by build.groovy. languages/README.md samples/application-conf The <code>application-conf</code> folder contains application specific configuration properties used by build.groovy and language build scripts.  It is intended to be copied as a high level folder to the application repository and configured to meet the build requirments of the application. Ex. <code>myAppRepository/application-conf</code> samples/application-conf/README.md samples/MortgageApplication This is an updated version of the original MortgageApplication sample designed to be built by zAppBuild. samples/MortgageApplication/README.md utilities This folder contains utility scripts which provide common utility functions used by the various zAppBuild build scripts. utilities/README.md build.groovy This is the main build script that is called to start the build process. BUILD.md test This folder contains testing framework for ZAppBuild which includes test scripts and related test content. test/README.md"},{"location":"BUILD/","title":"Building Applications with zAppBuild","text":"<p>The main or start build script for zAppBuild is <code>build.groovy</code>. Dependency Based Build (DBB) requires that the DBB_HOME environment variable be set when executing a Groovy script that uses DBB APIs.  In order to build an application using zAppBuild, change directory to the zAppBuild directory on USS and type <code>$DBB_HOME/bin/groovyz build.groovy</code>.</p> <p>However this will result in an error message because the build.groovy script has four required arguments that must be present during each invocation:</p> <ul> <li>\u2013workspace  - Absolute path to workspace (root) directory containing all required source directories or local Git repositories to build the application. <li>\u2013application  - Application local repository directory name (relative to workspace). <li>\u2013outDir  - Absolute path to the build output root directory on USS <li>\u2013hlq  -  High level qualifier for created build partition data sets <p>Example: <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n--workspace /u/build/repos \\\n--application app1 \\\n--outDir /u/build/out \\\n--hlq BUILD.APP1\n</code></pre> Since we are still missing a build target or calculated build option, the build will run successfully but not actually build any programs.</p>"},{"location":"BUILD/#common-pipeline-invocation-examples","title":"Common Pipeline Invocation Examples","text":"<p>Build one program <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n--workspace /u/build/repos \\\n--application app1 \\\n--outDir /u/build/out \\\n--hlq BUILD.APP1 \\\napp1/cobol/epsmpmt.cbl\n</code></pre> Build a list of programs contained in a text file <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      /u/usr1/buildList.txt\n</code></pre> Build all programs in the application <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --fullBuild\n</code></pre> Build only programs that have changed or are impacted by changed copybooks or include files since the last successful build <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --impactBuild\n</code></pre> Build only the changes which will be merged back to the main build branch. No calculation of impacted files. <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --mergeBuild\n</code></pre> Only scan source files in the application to collect dependency data without actually creating load modules <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --fullBuild \\\n                      --scanOnly\n</code></pre> Scan source files and existing load modules for the application to collect dependency data for source and outputs without actually creating load modules <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --fullBuild \\\n                      --scanAll\n</code></pre> Build programs with the 'Test' Options for debugging <pre><code>$DBB_HOME/bin/groovyz build.groovy  \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --debug \\\n                      --impactBuild\n</code></pre> Use Code Coverage Headless Collector in zUnit Tests and specify parameters through command-line options (which override properties defined in ZunitConfig.properties) <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --fullBuild \\\n                      --cc \\\n                      --cch localhost \\\n                      --ccp 8009 \\\n                      --cco \"e=CCPDF\"\n</code></pre></p>"},{"location":"BUILD/#common-user-build-invocation-examples","title":"Common User Build Invocation Examples","text":"<p>Build one program</p> <p>Build a single program in a user build context. Does not require use of the MetadataStore (filesystem or Db2) <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --userBuild app1/cobol/epsmpmt.cbl\n</code></pre> Build one program using a user build dependency file predefining dependency information to skip DBB scans and dependency resolution.</p> <p>Build a single program in a user build context and provide the dependency information from the IDE to skip scanning the files on USS. Useful when building on IBM ZD&amp;T or Wazi Sandbox environments. <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --userBuild \\\n                      --dependencyFile userBuildDependencyFile.json \\\n                      app1/cobol/epsmpmt.cbl\n</code></pre> Build one program with Debug Options</p> <p>Build a single program in a user build context including the configured TEST compile time options. <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --debug \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --userBuild app1/cobol/epsmpmt.cbl\n</code></pre> Build (Process) the zUnit Config file and start a debug session</p> <p>Process the zUnit bzucfg file in a user build context and initialize a debug session of the application under test. Requires the program under test to be compiled with Debug Options. <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --debugzUnitTestcase \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --userBuild app1/testcfg/epsmpmt.bzucfg\n</code></pre> Build (Process) the zUnit Config file and collect code coverage data</p> <p>Process the zUnit bzucfg file in a user build context and direct the code coverage report to the user. Requires the program under test to be compiled with Debug Options. <pre><code>$DBB_HOME/bin/groovyz build.groovy \\\n                      --workspace /u/build/repos \\\n                      --application app1 \\\n                      --ccczUnit \\\n                      --outDir /u/build/out \\\n                      --hlq BUILD.APP1 \\\n                      --userBuild app1/testcfg/epsmpmt.bzucfg\n</code></pre></p>"},{"location":"BUILD/#command-line-options-summary","title":"Command Line Options Summary","text":"<pre><code>$DBB_HOME/bin/groovyz &lt;zAppBuildLocation&gt;/build.groovy [options] buildfile\n\nbuildFile (optional):  Path of the source file to build (absolute or relative to workspace).\nIf buildFile is a text file (*.txt), then it is assumed to be a build list file.\n\nOptions:\n\nrequired options:\n -w,--workspace &lt;arg&gt;         Absolute path to workspace (root) directory\n                              containing all required source directories\n -a,--application &lt;arg&gt;       Application directory name (relative to workspace)\n -o,--outDir &lt;arg&gt;            Absolute path to the build output root directory\n -h,--hlq &lt;arg&gt;               High level qualifier for partition data sets\n\nbuild options:\n\n -f,--fullBuild               Flag indicating to build all programs for\n                              the application\n -i,--impactBuild             Flag indicating to build only programs impacted\n                              by changed files since last successful build.\n -b,--baselineRef             Comma seperated list of git references to overwrite\n                              the baselineHash hash in an impactBuild scenario.\n -m,--mergeBuild              Flag indicating to build only source code changes which will be\n                              merged back to the mainBuildBranch.\n\n -s,--scanOnly                Flag indicating to only scan source files for application without building anything (deprecated use --scanSource)\n -ss,--scanSource             Flag indicating to only scan source files for application without building anything\n -sl,--scanLoad               Flag indicating to only scan load modules for application without building anything\n -sa,--scanAll                Flag indicating to scan both source files and load modules for application without building anything\n -pv,--preview                Supplemental flag indicating to run build in preview mode without processing the execute commands\n\n\n -r,--reset                   Deletes the application's dependency collections\n                              and build result group from the DBB repository\n -v,--verbose                 Flag to turn on script trace\n -d,--debug                   Flag to build modules for debugging with\n                              IBM Debug for z/OS\n -l,--logEncoding &lt;arg&gt;       Encoding of output logs. Default is EBCDIC\n                              directory for user build\n -zTest,--runzTests           Specify if zUnit Tests should be run\n\n -p,--propFiles               Comma separated list of additional property files\n                              to load. Absolute paths or relative to workspace\n -po,--propOverwrites         Comma separated list of key=value pairs for set and overwrite build properties\n\n -cc,--ccczUnit               Flag to indicate to collect code coverage reports during zUnit step\n -cch,--cccHost               Headless Code Coverage Collector host (if not specified IDz will be used for reporting)\n -ccp,--cccPort               Headless Code Coverage Collector port (if not specified IDz will be used for reporting)\n -cco,--cccOptions            Headless Code Coverage Collector Options\n\n -re,--reportExternalImpacts  Flag to activate analysis and report of external impacted files within DBB collections\n\n\nDb2 MetadataStore configuration options\n -url,--url &lt;arg&gt;             Db2 JDBC URL for the MetadataStore.\n                              Example: jdbc:db2:&lt;Db2 server location&gt;\n -id,--id &lt;arg&gt;               Db2 user id for the MetadataStore\n -pw,--pw &lt;arg&gt;               Db2 password (encrypted with DBB Password Utility) for the MetadataStore\n -pf,--pwFile &lt;arg&gt;           Absolute or relative (from workspace) path to file containing Db2 password\n\nIDz/ZOD User Build options\n -u,--userBuild               Flag indicating running a user build\n -dz,--debugzUnitTestcase     Flag indicating to start a debug session for zUnit Test configurations as part of user build\n -e,--errPrefix &lt;arg&gt;         Unique id used for IDz error message datasets\n -df,--dependencyFile &lt;arg&gt;   Absolute or relative path (from workspace) to user build JSON file containing dependency information.\n\nutility options\n -help,--help                 Prints this message\n</code></pre>"},{"location":"BUILD/#invocation-samples-including-console-log","title":"Invocation Samples including console log","text":"<ul> <li>Building Applications with zAppBuild</li> <li>Common Pipeline Invocation Examples</li> <li>Common User Build Invocation Examples</li> <li>Command Line Options Summary</li> <li>Invocation Samples including console log<ul> <li>Build a Single Program</li> <li>Build a List of Programs</li> <li>Perform Full Build to build all files</li> <li>Perform Impact Build</li> <li>Perform Impact Build for topic branches</li> <li>Perform Impact Build by providing baseline reference for the analysis of changed files</li> <li>Perform a Merge build</li> <li>Perform a Build in Preview Mode</li> <li>Perform a Scan Source build</li> <li>Perform a Scan Source + Outputs build</li> <li>Dynamically Overwrite build properties</li> </ul> </li> </ul>"},{"location":"BUILD/#build-a-single-program","title":"Build a Single Program","text":"<p>Build a single program in the application.</p> <p>By leveraging <code>--userBuild</code> zAppBuild does not intialize the MetadataStore and also does not store a build result.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq USER.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --userBuild \\\n                      --verbose \\\n                      MortgageApplication/cobol/epsnbrvl.cbl\n</code></pre> Build log <pre><code>** Build start at 20210622.080042.000\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq USER.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --userBuild --verbose MortgageApplication/cobol/epsnbrvl.cbl\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\njava.version=8.0.6.20 - pmz6480sr6fp20-20201120_02(SR6 FP20)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/ZT01/var/dbb\n** Build properties at start up:\n..... // lists of all build properties\n** Build output located at /var/dbb/out/MortgageApplication\n** Unable to verify collections. No repository client.\n** Adding MortgageApplication/cobol/epsnbrvl.cbl to Building build list\n** Writing build list file to /var/dbb/out/MortgageApplication/buildList.txt\nMortgageApplication/cobol/epsnbrvl.cbl\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/cobol/epsnbrvl.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsnbrvl.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsnbrvl.cbl = LIB\n** Writing build report data to /var/dbb/out/MortgageApplication/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/BuildReport.html\n** Build ended at Tue Jun 22 08:00:44 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 1\n** Total build time  : 2.547 seconds\n</code></pre>"},{"location":"BUILD/#build-a-list-of-programs","title":"Build a List of Programs","text":"<p>In this build scenario, the build scope is defined through a text file, which references files to be build. The files are scanned and dependency metadata and a build result are stored in the DBB WebApp. Either provide an absolute path to the build list file; otherwise it is assumed to be relative path within the workspace</p> <p>Sample build list stored at <code>/var/dbb/MortgageApplication/myBuildList.txt</code> contains: <pre><code>MortgageApplication/bms/epsmort.bms\nMortgageApplication/cobol/epscmort.cbl\n</code></pre></p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --verbose \\\n                      /var/dbb/MortgageApplication/myBuildList.txt\n</code></pre> Build log <pre><code>** Build start at 20210622.081915.019\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --verbose /var/dbb/MortgageApplication/myBuildList.txt\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n..... // lists of all build properties\nrequired props = buildOrder,buildListFileExt\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.081915.019\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.081915.019 at https://dbb-webapp:8080/dbb/rest/buildResult/46992\n** Adding files listed in /var/dbb/MortgageApplication/myBuildList.txt to Building build list\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.081915.019/buildList.txt\nMortgageApplication/bms/epsmort.bms\nMortgageApplication/cobol/epscmort.cbl\n** Scanning source code.\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/bms/epsmort.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmort.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmort.bms =\n{\"dli\":false,\"lname\":\"EPSMORT\",\"file\":\"MortgageApplication\\/bms\\/epsmort.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscmort.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscmort.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscmort.cbl =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\"}],\"language\":\"COB\",\"sql\":true}\n** Storing 2 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to BMS.groovy script\nrequired props = bms_srcPDS,bms_cpyPDS,bms_loadPDS, bms_assembler,bms_linkEditor,bms_tempOptions,bms_maxRC,   SASMMOD1,SDFHLOAD,SDFHMAC,MACLIB,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.BMS\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.BMS.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/bms/epsmort.bms\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 75e13783f2197e12772cec64a16937707ea623a5\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.081915.019/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.081915.019/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.081915.019 at https://dbb-webapp:8080/dbb/rest/buildResult/46992\n** Build ended at Tue Jun 22 08:19:52 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 2\n** Total build time  : 36.978 seconds\n</code></pre>"},{"location":"BUILD/#perform-full-build-to-build-all-files","title":"Perform Full Build to build all files","text":"<p>The zAppBuild build option <code>--fullBuild</code> builds all files within the build scope which have a build script mapping defined in file.properties</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --fullBuild \\\n                      --verbose\n</code></pre> Build log <pre><code>** Build start at 20210622.082224.022\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --fullBuild --verbose\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.082224.022\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082224.022 at https://dbb-webapp:8080/dbb/rest/buildResult/47002\n** --fullBuild option selected. Building all programs for application MortgageApplication\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.082224.022/buildList.txt\nMortgageApplication/copybook/epsmtout.cpy\nMortgageApplication/cobol/epsnbrvl.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/bms/epsmort.bms\nMortgageApplication/link/epsmlist.lnk\nMortgageApplication/copybook/epsmortf.cpy\nMortgageApplication/copybook/epsnbrpm.cpy\nMortgageApplication/bms/epsmlis.bms\nMortgageApplication/copybook/epsmtcom.cpy\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/copybook/epsmtinp.cpy\nMortgageApplication/copybook/epspdata.cpy\nMortgageApplication/cobol/epsmpmt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/cobol/epscsmrd.cbl\n** Scanning source code.\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/copybook/epsmtout.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtout.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtout.cpy =\n{\"dli\":false,\"lname\":\"EPSMTOUT\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsnbrvl.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsnbrvl.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsnbrvl.cbl =\n{\"dli\":false,\"lname\":\"EPSNBRVL\",\"file\":\"MortgageApplication\\/cobol\\/epsnbrvl.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscsmrt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrt.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmort.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmort.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmort.bms =\n{\"dli\":false,\"lname\":\"EPSMORT\",\"file\":\"MortgageApplication\\/bms\\/epsmort.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/link/epsmlist.lnk (/var/dbb/dbb-zappbuild/samples/MortgageApplication/link/epsmlist.lnk)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/link/epsmlist.lnk =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmortf.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmortf.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmortf.cpy =\n{\"dli\":false,\"lname\":\"EPSMORTF\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsnbrpm.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsnbrpm.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsnbrpm.cpy =\n{\"dli\":false,\"lname\":\"EPSNBRPM\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmlis.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmlis.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmlis.bms =\n{\"dli\":false,\"lname\":\"EPSMLIS\",\"file\":\"MortgageApplication\\/bms\\/epsmlis.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\"dli\":false,\"lname\":\"EPSMTCOM\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmlist.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmlist.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmlist.cbl =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/cobol\\/epsmlist.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtinp.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtinp.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtinp.cpy =\n{\"dli\":false,\"lname\":\"EPSMTINP\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epspdata.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epspdata.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epspdata.cpy =\n{\"dli\":false,\"lname\":\"EPSPDATA\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmpmt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmpmt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmpmt.cbl =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscmort.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscmort.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscmort.cbl =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\"}],\"language\":\"COB\",\"sql\":true}\n*** Scanning file MortgageApplication/cobol/epscsmrd.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrd.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrd.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRD\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrd.cbl\",\"mq\":false,\"cics\":true,\"language\":\"COB\",\"sql\":false}\n** Storing 15 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to BMS.groovy script\nrequired props = bms_srcPDS,bms_cpyPDS,bms_loadPDS, bms_assembler,bms_linkEditor,bms_tempOptions,bms_maxRC,   SASMMOD1,SDFHLOAD,SDFHMAC,MACLIB,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.BMS\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.BMS.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/bms/epsmort.bms\n*** Building file MortgageApplication/bms/epsmlis.bms\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/cobol/epsnbrvl.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsnbrvl.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsnbrvl.cbl = LIB\n*** Building file MortgageApplication/cobol/epscsmrt.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscsmrt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscsmrt.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscsmrt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epscsmrt.cbl = LIB,CICS\n*** Scanning load module for MortgageApplication/cobol/epscsmrt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmlist.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmlist.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmlist.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmlist.cbl = LIB,CICS\n*** Building file MortgageApplication/cobol/epsmpmt.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmpmt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmpmt.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmpmt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmpmt.cbl = LIB\n*** Scanning load module for MortgageApplication/cobol/epsmpmt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epscsmrd.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscsmrd.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscsmrd.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscsmrd.cbl:\nCobol compiler parms for MortgageApplication/cobol/epscsmrd.cbl = LIB,CICS\n*** Scanning load module for MortgageApplication/cobol/epscsmrd.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRD\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrd.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n** Building files mapped to LinkEdit.groovy script\nrequired props = linkedit_srcPDS,linkedit_objPDS,linkedit_loadPDS,linkedit_linkEditor,linkedit_tempOptions,applicationOutputsCollectionName,  SDFHLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LINK\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/link/epsmlist.lnk\n*** Creating dependency resolver for MortgageApplication/link/epsmlist.lnk with null rules\n*** Scanning file with the default scanner\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMPMT\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.LOAD\",\"category\":\"LINK\"},{\"lname\":\"EPSMLIST\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 75e13783f2197e12772cec64a16937707ea623a5\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.082224.022/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.082224.022/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082224.022 at https://dbb-webapp:8080/dbb/rest/buildResult/47002\n** Build ended at Tue Jun 22 08:22:44 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 9\n** Total build time  : 20.217 seconds\n\n** Build finished\n</code></pre>"},{"location":"BUILD/#perform-impact-build","title":"Perform Impact Build","text":"<p><code>--impactBuild</code> builds only programs impacted by source files that have changed since the last successful build.</p> <p>This build scenario identifies the changed files based on diffing the git baseline hash and the current hash; then the list of changed files is passed into the impact analysis phase, which will detect the impacted files based on the <code>impactResolutionRules</code> which are defined in application.properties.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --impactBuild \\\n                      --verbose\n</code></pre> Build log <pre><code>** Build start at 20210622.082942.029\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --impactBuild --verbose\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.082942.029\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082942.029 at https://dbb-webapp:8080/dbb/rest/buildResult/47012\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Getting baseline hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 75e13783f2197e12772cec64a16937707ea623a5\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Diffing baseline 75e13783f2197e12772cec64a16937707ea623a5 -&gt; current 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n**** MortgageApplication/copybook/epsmtcom.cpy\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\"dli\":false,\"lname\":\"EPSMTCOM\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n** Storing 1 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n** Performing impact analysis on changed file MortgageApplication/copybook/epsmtcom.cpy\n*** Creating impact resolver for MortgageApplication/copybook/epsmtcom.cpy with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                },{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/bms\"} ]             },{\"category\": \"LINK\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/cobol\"}, {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/link\"} ]             }] rules\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/link/epsmlist.lnk\n** MortgageApplication/link/epsmlist.lnk is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epsmlist.cbl\n** MortgageApplication/cobol/epsmlist.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.082942.029/buildList.txt\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/link/epsmlist.lnk\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmlist.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmlist.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmlist.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmlist.cbl = LIB,CICS\n*** Building file MortgageApplication/cobol/epscsmrt.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscsmrt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscsmrt.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscsmrt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epscsmrt.cbl = LIB,CICS\n*** Scanning load module for MortgageApplication/cobol/epscsmrt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n** Building files mapped to LinkEdit.groovy script\nrequired props = linkedit_srcPDS,linkedit_objPDS,linkedit_loadPDS,linkedit_linkEditor,linkedit_tempOptions,applicationOutputsCollectionName,  SDFHLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LINK\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/link/epsmlist.lnk\n*** Creating dependency resolver for MortgageApplication/link/epsmlist.lnk with null rules\n*** Scanning file with the default scanner\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMPMT\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.LOAD\",\"category\":\"LINK\"},{\"lname\":\"EPSMLIST\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.082942.029/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.082942.029/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082942.029 at https://dbb-webapp:8080/dbb/rest/buildResult/47012\n** Build ended at Tue Jun 22 08:29:59 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 4\n** Total build time  : 17.239 seconds\n</code></pre>"},{"location":"BUILD/#perform-impact-build-for-topic-branches","title":"Perform Impact Build for topic branches","text":"<p>zAppBuild is able to detect when building a topic branch for the first time. It will automatically clone the dependency data collections from the main build branch (see <code>mainBuildBranch</code> build property in application.properties) in order to avoid having to rescan the entire application.</p> <p>It also leverages the last successful build result from the buildgroup of the <code>mainBuildBranch</code> configuration to obtain the baseline hash to calculate the changed files.</p> <p>The invocation is similar to other impact builds (you might want to consider a dedicated set of build libraries): <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.FEAT \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --impactBuild \\\n                      --verbose\n</code></pre> Please see the output provided in verbose mode when setting up the collections as well as the calculation of changed files:</p> Build log <pre><code>** Build start at 20210622.085830.058\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.FEAT --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --impactBuild --verbose\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.085830.058\n** Build result created for BuildGroup:MortgageApplication-topic200 BuildLabel:build.20210622.085830.058 at https://dbb-webapp:8080/dbb/rest/buildResult/47056\n** Cloned collection MortgageApplication-topic200 from MortgageApplication-master\n** Cloned collection MortgageApplication-topic200-outputs from MortgageApplication-master-outputs\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n** No previous topic branch successful build result. Retrieving last successful main branch build result.\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : bee818488554ec76ebb5caffb2139cd1cd9edea2\n** Getting baseline hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Diffing baseline 857266a44a6e859c4f949adb7e32cfbc4a8bd736 -&gt; current bee818488554ec76ebb5caffb2139cd1cd9edea2\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n**** MortgageApplication/cobol/epsnbrvl.cbl\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n** Updating collections MortgageApplication-topic200 and MortgageApplication-topic200-outputs\n*** Scanning file MortgageApplication/cobol/epsnbrvl.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsnbrvl.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsnbrvl.cbl =\n{\"dli\":false,\"lname\":\"EPSNBRVL\",\"file\":\"MortgageApplication\\/cobol\\/epsnbrvl.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n** Storing 1 logical files in repository collection 'MortgageApplication-topic200'\nHTTP/1.1 200 OK\n** Found build script mapping for MortgageApplication/cobol/epsnbrvl.cbl. Adding to build list\n** Performing impact analysis on changed file MortgageApplication/cobol/epsnbrvl.cbl\n*** Creating impact resolver for MortgageApplication/cobol/epsnbrvl.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                },{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/bms\"} ]             },{\"category\": \"LINK\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/cobol\"}, {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/link\"} ]             }] rules\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/cobol/epsnbrvl.cbl. Adding to build list.\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.085830.058/buildList.txt\nMortgageApplication/cobol/epsnbrvl.cbl\nMortgageApplication/cobol/epscmort.cbl\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.FEAT.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.FEAT.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.FEAT.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.FEAT.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.FEAT.LOAD\n*** Building file MortgageApplication/cobol/epsnbrvl.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsnbrvl.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsnbrvl.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsnbrvl.cbl = LIB\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*! The compile return code (12) for MortgageApplication/cobol/epscmort.cbl exceeded the maximum return code allowed (4)\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : bee818488554ec76ebb5caffb2139cd1cd9edea2\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.085830.058/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.085830.058/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-topic200 BuildLabel:build.20210622.085830.058 at https://dbb-webapp:8080/dbb/rest/buildResult/47056\n** Build ended at Tue Jun 22 08:59:15 GMT+01:00 2021\n** Build State : ERROR\n** Total files processed : 2\n** Total build time  : 44.702 seconds\n</code></pre>"},{"location":"BUILD/#perform-impact-build-by-providing-baseline-reference-for-the-analysis-of-changed-files","title":"Perform Impact Build by providing baseline reference for the analysis of changed files","text":"<p>Implementing a release-based approach will lead to combining several features into the release candidate, which is formed in a release branch. For more information please have a look to the documentation about git flow.</p> <p>To create an incremental release candidate, the build framework needs to perform a consolidated build that includes all changed files and their impacts (potentially this build can use optimized compile options). In this situation, the first build on the release branch must be slightly different from the typical impact build of topic branches.</p> <p>The invocation for this consolidated build is performed through the <code>--impactBuild</code> parameter with the use of an additional option, called <code>--baselineRef</code>. The command-line option <code>--baselineRef</code> allows you to specify the baseline hash/tag for each directory when running an impact analysis: each file that was changed, renamed or deleted between the baseline hash/tag and the current hash will be managed by the build framework, and will impact the scope of the impact build. The referenced directory needs to be in the list of the <code>applicationSrcDirs</code> build property.</p> <p>The syntax for <code>--baselineRef</code> is a comma-seperated list of mappings for each application source dir. Each mapping is seperated by a colon: <pre><code>--baselineRef &lt;application source dir&gt;:&lt;gitReference&gt;,&lt;application source dir&gt;:&lt;gitReference&gt;,...\n</code></pre></p> <p>Alternatively, for the main application directory reference, it is sufficient to specify <code>--baselineRef &lt;gitReference&gt;</code>.</p> <p><code>gitReference</code> can either be a git commit hash or a git tag in the history.</p> <p>Another scenario of this build setup is to run the build with the DBB reportOnly option to build a cumulative deployment package without rebuilding the binaries.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.REL \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --impactBuild \\\n                      --baselineRef 6db56f7eecb420b56b69ca0ab7fcc2f1d9a7e5a8 \\\n                      --verbose\n</code></pre> Build log <pre><code>** Build start at 20210830.095350.053\n** Input args = /var/dbb/dbb-zappbuild/samples --workDir /var/dbb/out/MortgageApplication --hlq DBB.ZAPP.REL --application MortgageApplication --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/jenkins/zappbuild_config/zappbuild.jenkins.properties --impactBuild --baselineRef 6db56f7eecb420b56b69ca0ab7fcc2f1d9a7e5a8\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/dependencyReport.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/REXX.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild-config/build.properties\n** Loading property file /var/dbb/dbb-zappbuild-config/datasets.properties\n** Loading property file /var/jenkins/zappbuild_config/zappbuild.jenkins.properties\njava.version=8.0.6.20 - pmz6480sr6fp20-20201120_02(SR6 FP20)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/var/dbb/dbb-zappbuild\n** Build properties at start up:\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210830.095350.053\n** Build result created for BuildGroup:MortgageApplication-baselineBranch BuildLabel:build.20210830.095350.053 at https://dbb-webapp:8080/dbb/rest/buildResult/54806\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 192adb8568b8179c7e537a339f1d8df7f2932f4a\n** Getting baseline hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n*** Baseline hash for directory MortgageApplication retrieved from overwrite.\n** Storing MortgageApplication : 6db56f7eecb420b56b69ca0ab7fcc2f1d9a7e5a8\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Diffing baseline 6db56f7eecb420b56b69ca0ab7fcc2f1d9a7e5a8 -&gt; current 192adb8568b8179c7e537a339f1d8df7f2932f4a\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n**** MortgageApplication/cobol/epscmort.cbl\n**** MortgageApplication/cobol/epsmpmt.cbl\n!! (fixGitDiffPath) File not found.\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n** Updating collections MortgageApplication-baselineBranch and MortgageApplication-baselineBranch-outputs\n*** Sorted list of changed files: [MortgageApplication/cobol/epsmpmt.cbl, MortgageApplication/cobol/epscmort.cbl]\n*** Scanning file MortgageApplication/cobol/epsmpmt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmpmt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmpmt.cbl =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscmort.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscmort.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscmort.cbl =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\"}],\"language\":\"COB\",\"sql\":true}\n** Storing 2 logical files in repository collection 'MortgageApplication-baselineBranch'\nHTTP/1.1 200 OK\n*** Perform impacted analysis for changed files.\n** Found build script mapping for MortgageApplication/cobol/epsmpmt.cbl. Adding to build list\n** Performing impact analysis on changed file MortgageApplication/cobol/epsmpmt.cbl\n*** Creating impact resolver for MortgageApplication/cobol/epsmpmt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                },{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/bms\"} ]             },{\"category\": \"LINK\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/cobol\"}, {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/link\"} ]             },{\"category\": \"PROPERTY\"}] rules\n** Found impacted file MortgageApplication/link/epsmlist.lnk\n** MortgageApplication/link/epsmlist.lnk is impacted by changed file MortgageApplication/cobol/epsmpmt.cbl. Adding to build list.\n** Found build script mapping for MortgageApplication/cobol/epscmort.cbl. Adding to build list\n** Performing impact analysis on changed file MortgageApplication/cobol/epscmort.cbl\n*** Creating impact resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                },{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/bms\"} ]             },{\"category\": \"LINK\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/cobol\"}, {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/link\"} ]             },{\"category\": \"PROPERTY\"}] rules\n*** Perform impacted analysis for property changes.\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210830.095350.053/buildList.txt\nMortgageApplication/cobol/epsmpmt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/link/epsmlist.lnk\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.REL.COBOL\n** Creating / verifying build dataset DBB.ZAPP.REL.COPY\n** Creating / verifying build dataset DBB.ZAPP.REL.OBJ\n** Creating / verifying build dataset DBB.ZAPP.REL.DBRM\n** Creating / verifying build dataset DBB.ZAPP.REL.LOAD\n*** Building file MortgageApplication/cobol/epsmpmt.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmpmt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmpmt.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmpmt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmpmt.cbl = LIB\n*** Scanning load module for MortgageApplication/cobol/epsmpmt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.REL.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n** Building files mapped to LinkEdit.groovy script\nrequired props = linkedit_srcPDS,linkedit_objPDS,linkedit_loadPDS,linkedit_linkEditor,linkedit_tempOptions,applicationOutputsCollectionName,  SDFHLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.REL.LINK\n** Creating / verifying build dataset DBB.ZAPP.REL.OBJ\n** Creating / verifying build dataset DBB.ZAPP.REL.LOAD\n*** Building file MortgageApplication/link/epsmlist.lnk\n*** Creating dependency resolver for MortgageApplication/link/epsmlist.lnk with null rules\n*** Scanning file with the default scanner\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMPMT\",\"library\":\"DBB.ZAPP.REL.LOAD\",\"category\":\"LINK\"},{\"lname\":\"EPSMLIST\",\"library\":\"DBB.ZAPP.REL.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 192adb8568b8179c7e537a339f1d8df7f2932f4a\n** Setting property :giturl:MortgageApplication : git@github.com:dennis-behm/dbb-zappbuild.git\n** Setting property :gitchangedfiles:MortgageApplication : https://github.com/ibm/dbb-zappbuild/compare/192adb8568b8179c7e537a339f1d8df7f2932f4a..192adb8568b8179c7e537a339f1d8df7f2932f4a\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210830.095350.053/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210830.095350.053/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-baselineBranch BuildLabel:build.20210830.095350.053 at https://dbb-webapp:8080/dbb/rest/buildResult/54806\n** Build ended at Mon Aug 30 09:53:59 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 3\n** Total build time  : 8.546 seconds\n</code></pre>"},{"location":"BUILD/#perform-a-merge-build","title":"Perform a Merge build","text":"<p><code>--mergeBuild</code> calculate the changes of a topic branch flowing back into the <code>mainBuildBranch</code> reference. This build type does not perform calculation of impacted files.</p> <p>The scenario is targeting for builds on topic branches. The scope of the build is focussing on the outgoing changes. It is not incremental. Any time you invoke this build, it will the changes which will be merged to the target reference.</p> <p>It leverages the git triple-dot diff syntax to identify the changes, similar to what can be seen in a pull/merge request.</p> <p>In the below case both <code>MortgageApplication/cobol/epsmlist.cbl</code> and <code>MortgageApplication/copybook/epsnbrpm.cpy</code> are changed, but only the <code>epsmlist.cbl</code> is built because it is mapped to a build script.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --mergeBuild \\\n                      --verbose\n</code></pre> Build log <pre><code>+ /usr/lpp/dbb/v1r0/bin/groovyz /var/dbb/dbb-zappbuild/build.groovy --sourceDir /var/dbb/dbb-zappbuild/samples --workDir /var/dbb/out/MortgageApplication --hlq DBB.ZAPP.MERGE.BUILD --application MortgageApplication --verbose --mergeBuild --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties\n\n** Build start at 20211116.104234.042\n** Input args = /var/dbb/dbb-zappbuild/samples --workDir /var/dbb/out/MortgageApplication --hlq DBB.ZAPP.MERGE.BUILD --application MortgageApplication --verbose --mergeBuild --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/dependencyReport.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/REXX.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild-config/build.properties\n** Loading property file /var/dbb/dbb-zappbuild-config/datasets.properties\njava.version=8.0.6.36 - pmz6480sr6fp36-20210913_01(SR6 FP36)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/u/dbehm\n** Build properties at start up:\n..... // lists of all build properties\n** Repository client created for https://10.3.20.96:10443/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20211116.104234.042\n** Build result created for BuildGroup:MortgageApplication-outgoingChangesBuild BuildLabel:build.20211116.104234.042 at https://10.3.20.96:10443/dbb/rest/buildResult/58773\n** --mergeBuild option selected. Building changed programs for application MortgageApplication flowing back to main\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Triple-dot Diffing configuration baseline main -&gt; current HEAD\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n!! (fixGitDiffPath) File not found.\n**** MortgageApplication/application-conf/application.properties\n**** MortgageApplication/cobol/epsmlist.cbl\n**** MortgageApplication/copybook/epsnbrpm.cpy\n!! (fixGitDiffPath) File not found.\n!! (fixGitDiffPath) File not found.\n!! (fixGitDiffPath) File not found.\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n** Updating collections MortgageApplication-outgoingChangesBuild and MortgageApplication-outgoingChangesBuild-outputs\n*** Sorted list of changed files: [MortgageApplication/cobol/epsmlist.cbl, MortgageApplication/copybook/epsnbrpm.cpy]\n*** Scanning file MortgageApplication/cobol/epsmlist.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmlist.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmlist.cbl =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/cobol\\/epsmlist.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsnbrpm.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsnbrpm.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsnbrpm.cpy =\n{\"dli\":false,\"lname\":\"EPSNBRPM\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n** Storing 2 logical files in repository collection 'MortgageApplication-outgoingChangesBuild'\nHTTP/1.1 200 OK\n** Found build script mapping for MortgageApplication/cobol/epsmlist.cbl. Adding to build list\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20211116.104234.042/buildList.txt\nMortgageApplication/cobol/epsmlist.cbl\n** Updating collections MortgageApplication-outgoingChangesBuild and MortgageApplication-outgoingChangesBuild-outputs\n*** Scanning file MortgageApplication/cobol/epsmlist.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmlist.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmlist.cbl =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/cobol\\/epsmlist.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n** Storing 1 logical files in repository collection 'MortgageApplication-outgoingChangesBuild'\nHTTP/1.1 200 OK\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.MERGE.BUILD.COBOL\n** Creating / verifying build dataset DBB.ZAPP.MERGE.BUILD.COPY\n** Creating / verifying build dataset DBB.ZAPP.MERGE.BUILD.OBJ\n** Creating / verifying build dataset DBB.ZAPP.MERGE.BUILD.DBRM\n** Creating / verifying build dataset DBB.ZAPP.MERGE.BUILD.LOAD\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmlist.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmlist.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmlist.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmlist.cbl = LIB,CICS\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : d03087c5e4583be84cbe5c03a5fc7113074f46d2\n** Setting property :giturl:MortgageApplication : https://github.com/dennis-behm/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20211116.104234.042/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20211116.104234.042/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-outgoingChangesBuild BuildLabel:build.20211116.104234.042 at https://10.3.20.96:10443/dbb/rest/buildResult/58773\n** Build ended at Tue Nov 16 22:42:40 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 1\n** Total build time  : 5.468 seconds\n</code></pre>"},{"location":"BUILD/#perform-a-build-in-preview-mode","title":"Perform a Build in Preview Mode","text":"<p><code>--preview</code> is a supplemental option to the various build types of zAppBuild. This supplemental option will let the build process run through all the build phases of the specified build option, but instead of executing the build commands such as copying the source files to the datasets or invoking the compile and link commands, it just documents what would be done and sets the return codes of these commands to 0. Please note, that file are scanned and, depending on the primary build option, dependency information is stored in the DBB Metadatastore.</p> <p>For instance, use the <code>--preview</code> flag with the <code>--impactBuild</code> option to obtain a preview of the impact build actions such as identified changed files, the calculated impacted files, the build list, the build flow, the applied build properties and option including the outputs which would be produced.</p> <p>Use the <code>--preview</code> flag with the <code>--fullBuild</code> option to produce the full bill of material (documented in a build report) for the artifacts that could be generated in the datasets pointed by the <code>hlq</code> parameter.</p> <p>The build will generate a build report, which, depending of the provided build option, will be stored in the build group. However, the build result status is set to <code>4</code> and does not impact the calculation of changed file of subsequent impact builds.</p> <p>The below sample build log is documenting an <code>--impactBuild --preview</code> with the reporting capablities activated to what the build would do and any potential conflicts of concurrent development activities.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --impactBuild \\\n                      --preview \\\n                      --verbose\n</code></pre> Build log <pre><code>+ /usr/lpp/dbb/v2r0/bin/groovyz /var/dbb/dbb-zappbuild/build.groovy --sourceDir /var/dbb/dbb-zappbuild/samples --workDir /var/dbb/work/mortgageout --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id DB2ID --pwFile /var/dbb/config/db2-pwd-file.xml --hlq DBEHM.DBB.BUILD --application MortgageApplication --verbose --impactBuild --preview --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties\n\n** Build start at 20230425.040722.007\n** Input args = /var/dbb/dbb-zappbuild/samples --workDir /var/dbb/work/mortgageout --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id DB2ID --pwFile /var/dbb/config/db2-pwd-file.xml --hlq DBEHM.DBB.BUILD --application MortgageApplication --verbose --impactBuild --preview --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/dbehm.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/dependencyReport.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/REXX.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** Loading property file /var/dbb/dbb-zappbuild/build-conf/Transfer.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/languageConfigurationMapping.properties\njava.version=8.0.7.20 - pmz6480sr7fp20-20221020_01(SR7 FP20)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/u/builduser\n** Build properties at start up:\n...\npreview=true\n...\n** zAppBuild running on DBB Toolkit Version 2.0.0 20-Mar-2023 10:36:28\nrequired props = buildOrder,buildListFileExt\n** Running in reportOnly mode. Will process build options but not execute any steps.\n** Db2 MetadataStore initialized\n** Build output located at /var/dbb/work/mortgageout/build.20230425.160722.007\n** Build result created for BuildGroup:MortgageApplication-350_preview_builds BuildLabel:build.20230425.160722.007\n** --preview cli option provided. Processing all phases of the supplied build option, but will not execute the commands.\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 2b3add1e85a8124ff1d7af6ab1de2e5463325d7a\n** Getting baseline hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : cf6bc732bd717b404c5cf71a8f8d14458138a2d0\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Diffing baseline cf6bc732bd717b404c5cf71a8f8d14458138a2d0 -&gt; current 2b3add1e85a8124ff1d7af6ab1de2e5463325d7a\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication :\n**** MortgageApplication/jcl/MYSAMP.jcl\n**** MortgageApplication/copybook/epsmtcom.cpy\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication :\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication :\n** Updating collections MortgageApplication-350_preview_builds and MortgageApplication-350_preview_builds-outputs\n*** Sorted list of changed files: [MortgageApplication/jcl/MYSAMP.jcl, MortgageApplication/copybook/epsmtcom.cpy]\n*** Scanning file MortgageApplication/jcl/MYSAMP.jcl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/MYSAMP.jcl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/MYSAMP.jcl =\n{\n   \"cics\": false,\n   \"dli\": false,\n   \"file\": \"MortgageApplication\\/jcl\\/MYSAMP.jcl\",\n   \"language\": \"JCL\",\n   \"lname\": \"MYSAMP\",\n   \"logicalDependencies\": [\n      {\n         \"category\": \"COPY\",\n         \"library\": \"SYSLIB\",\n         \"lname\": \"EPSMTINP\"\n      },\n      {\n         \"category\": \"COPY\",\n         \"library\": \"SYSLIB\",\n         \"lname\": \"EPSMTOUT\"\n      }\n   ],\n   \"mq\": false,\n   \"sql\": false\n}\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\n   \"cics\": false,\n   \"dli\": false,\n   \"file\": \"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\n   \"language\": \"COB\",\n   \"lname\": \"EPSMTCOM\",\n   \"logicalDependencies\": [\n      {\n         \"category\": \"COPY\",\n         \"library\": \"SYSLIB\",\n         \"lname\": \"EPSMTINP\"\n      },\n      {\n         \"category\": \"COPY\",\n         \"library\": \"SYSLIB\",\n         \"lname\": \"EPSMTOUT\"\n      }\n   ],\n   \"mq\": false,\n   \"sql\": false\n}\n** Storing 2 logical files in MetadataStore collection 'MortgageApplication-350_preview_builds'\n*** Perform impacted analysis for changed files.\n** Found build script mapping for MortgageApplication/jcl/MYSAMP.jcl. Adding to build list\n** Performing impact analysis on changed file MortgageApplication/jcl/MYSAMP.jcl\n*** Creating SearchPathImpactFinder with collections [MortgageApplication-350_preview_builds, MortgageApplication-350_preview_builds-outputs] and impactSearch configuration search:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/copybook/*.cpysearch:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/bms/*.bmssearch:[:LINK]/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/cobol/*.cbl\n** Performing impact analysis on changed file MortgageApplication/copybook/epsmtcom.cpy\n*** Creating SearchPathImpactFinder with collections [MortgageApplication-350_preview_builds, MortgageApplication-350_preview_builds-outputs] and impactSearch configuration search:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/copybook/*.cpysearch:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/bms/*.bmssearch:[:LINK]/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/cobol/*.cbl\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epsmlist.cbl\n** MortgageApplication/cobol/epsmlist.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/link/epsmlist.lnk\n** MortgageApplication/link/epsmlist.lnk is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Calculation of impacted files by changed properties has been skipped due to configuration.\n** Writing build list file to /var/dbb/work/mortgageout/build.20230425.160722.007/buildList.txt\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/link/epsmlist.lnk\nMortgageApplication/jcl/MYSAMP.jcl\n** Populating file level properties from individual artifact properties files.\n* Populating file level properties overrides.\n** Checking file property overrides for MortgageApplication/cobol/epsmlist.cbl\n*** MortgageApplication/cobol/epsmlist.cbl has an individual artifact properties file defined in properties/epsmlist.cbl.properties\n    Found file property cobol_compileParms = ${cobol_compileParms},SOURCE\n*** Checking for existing file property overrides\n    Checking build property cobol_compileParms\n    Adding file property override cobol_compileParms = ${cobol_compileParms},SOURCE for MortgageApplication/cobol/epsmlist.cbl\n** Checking file property overrides for MortgageApplication/cobol/epscsmrt.cbl\n*** Checking for existing file property overrides\n** Checking file property overrides for MortgageApplication/cobol/epscmort.cbl\n*** Checking for existing file property overrides\n** Checking file property overrides for MortgageApplication/link/epsmlist.lnk\n*** Checking for existing file property overrides\n** Checking file property overrides for MortgageApplication/jcl/MYSAMP.jcl\n*** Checking for existing file property overrides\n** Perform analysis and reporting of external impacted files for the build list including changed files.\n*** Running external impact analysis with file filter **/* and collection patterns .*-main.* with analysis mode deep\n*** Running external impact analysis for files\n     MortgageApplication/cobol/epscmort.cbl\n     MortgageApplication/cobol/epsmlist.cbl\n     MortgageApplication/link/epsmlist.lnk\n     MortgageApplication/jcl/MYSAMP.jcl\n     MortgageApplication/cobol/epscsmrt.cbl\n     MortgageApplication/copybook/epsmtcom.cpy\n*** Writing report of external impacts to file /var/dbb/work/mortgageout/build.20230425.160722.007/externalImpacts_MortgageApplication-main-outputs.log\n*** Potential external impact found EPSCSMRT (MortgageApplication/cobol/epscsmrt.cbl) in collection MortgageApplication-main-outputs\n*** Potential external impact found EPSCMORT (MortgageApplication/cobol/epscmort.cbl) in collection MortgageApplication-main-outputs\n*** Potential external impact found EPSMLIST (MortgageApplication/link/epsmlist.lnk) in collection MortgageApplication-main-outputs\n*** Writing report of external impacts to file /var/dbb/work/mortgageout/build.20230425.160722.007/externalImpacts_MortgageApplication-main-patch.log\n*** Potential external impact found EPSCSMRT (MortgageApplication/cobol/epscsmrt.cbl) in collection MortgageApplication-main-patch\n*** Potential external impact found EPSMLIST (MortgageApplication/cobol/epsmlist.cbl) in collection MortgageApplication-main-patch\n*** Potential external impact found EPSCMORT (MortgageApplication/cobol/epscmort.cbl) in collection MortgageApplication-main-patch\n*** Writing report of external impacts to file /var/dbb/work/mortgageout/build.20230425.160722.007/externalImpacts_MortgageApplication-main.log\n*** Potential external impact found EPSCSMRT (MortgageApplication/cobol/epscsmrt.cbl) in collection MortgageApplication-main\n*** Potential external impact found EPSMLIST (MortgageApplication/cobol/epsmlist.cbl) in collection MortgageApplication-main\n*** Potential external impact found EPSCMORT (MortgageApplication/cobol/epscmort.cbl) in collection MortgageApplication-main\n*** Writing report of external impacts to file /var/dbb/work/mortgageout/build.20230425.160722.007/externalImpacts_MortgageApplication-main-patch-outputs.log\n*** Potential external impact found EPSMLIST (MortgageApplication/link/epsmlist.lnk) in collection MortgageApplication-main-patch-outputs\n**** Running external impact analysis for identified external impacted files as dependent files of the initial set.\n     MortgageApplication/cobol/epscsmrt.cbl\n     MortgageApplication/cobol/epscmort.cbl\n     MortgageApplication/link/epsmlist.lnk\n     MortgageApplication/cobol/epscsmrt.cbl\n     MortgageApplication/cobol/epsmlist.cbl\n     MortgageApplication/cobol/epscmort.cbl\n     MortgageApplication/cobol/epscsmrt.cbl\n     MortgageApplication/cobol/epsmlist.cbl\n     MortgageApplication/cobol/epscmort.cbl\n     MortgageApplication/link/epsmlist.lnk\n** Calculate and document concurrent changes.\n***  Analysing and validating changes for branch : main\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 2b3add1e85a8124ff1d7af6ab1de2e5463325d7a\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication in configuration main:\n**** MortgageApplication/cobol/epscmort.cbl\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication in configuration main:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication in configuration main:\n** Writing report of concurrent changes to /var/dbb/work/mortgageout/build.20230425.160722.007/report_concurrentChanges.txt for configuration main\n Changed: MortgageApplication/cobol/epscmort.cbl\n*!! MortgageApplication/cobol/epscmort.cbl is changed on branch main and intersects with the current build list.\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy,Transfer.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED,   cobol_dependencySearch\n** Creating / verifying build dataset DBEHM.DBB.BUILD.COBOL\n** Creating / verifying build dataset DBEHM.DBB.BUILD.COPY\n** Creating / verifying build dataset DBEHM.DBB.BUILD.OBJ\n** Creating / verifying build dataset DBEHM.DBB.BUILD.DBRM\n** Creating / verifying build dataset DBEHM.DBB.BUILD.LOAD\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Resolution rules for MortgageApplication/cobol/epsmlist.cbl:\nsearch:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/copybook/*.cpy\n*** Physical dependencies for MortgageApplication/cobol/epsmlist.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nProgram attributes: CICS=true, SQL=false, DLI=false, MQ=false\nCobol compiler parms for MortgageApplication/cobol/epsmlist.cbl = LIB,SOURCE,CICS\nLink-Edit parms for MortgageApplication/cobol/epsmlist.cbl = MAP,RENT,COMPAT(PM5),SSI=2b3add1e\n*** Building file MortgageApplication/cobol/epscsmrt.cbl\n*** Resolution rules for MortgageApplication/cobol/epscsmrt.cbl:\nsearch:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/copybook/*.cpy\n*** Physical dependencies for MortgageApplication/cobol/epscsmrt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nProgram attributes: CICS=true*, SQL=false, DLI=false, MQ=false\nCobol compiler parms for MortgageApplication/cobol/epscsmrt.cbl = LIB,CICS\nLink-Edit parms for MortgageApplication/cobol/epscsmrt.cbl = MAP,RENT,COMPAT(PM5),SSI=2b3add1e\n*** Scanning load module for MortgageApplication/cobol/epscsmrt.cbl\n*** Logical file =\n{\n   \"cics\": false,\n   \"dli\": false,\n   \"file\": \"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\n   \"language\": \"ZBND\",\n   \"lname\": \"EPSCSMRT\",\n   \"logicalDependencies\": [\n      {\n         \"category\": \"LINK\",\n         \"library\": \"DBEHM.DBB.BUILD.OBJ\",\n         \"lname\": \"EPSCSMRT\"\n      }\n   ],\n   \"mq\": false,\n   \"sql\": false\n}\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\nsearch:/var/dbb/dbb-zappbuild/samples/?path=MortgageApplication/copybook/*.cpy\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/u\\/dbehm\\/test-zapp\\/dbb-zappbuild\\/samples\\/\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nProgram attributes: CICS=true, SQL=true, DLI=false, MQ=false\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\nLink-Edit parms for MortgageApplication/cobol/epscmort.cbl = MAP,RENT,COMPAT(PM5),SSI=2b3add1e\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\n   \"cics\": false,\n   \"dli\": false,\n   \"file\": \"MortgageApplication\\/cobol\\/epscmort.cbl\",\n   \"language\": \"ZBND\",\n   \"lname\": \"EPSCMORT\",\n   \"logicalDependencies\": [\n      {\n         \"category\": \"LINK\",\n         \"library\": \"DBEHM.DBB.BUILD.OBJ\",\n         \"lname\": \"EPSCMORT\"\n      },\n      {\n         \"category\": \"LINK\",\n         \"library\": \"DBEHM.DBB.BUILD.OBJ\",\n         \"lname\": \"EPSNBRVL\"\n      }\n   ],\n   \"mq\": false,\n   \"sql\": false\n}\n** Building files mapped to LinkEdit.groovy script\nrequired props = linkedit_srcPDS,linkedit_objPDS,linkedit_loadPDS,linkedit_linkEditor,linkedit_tempOptions,applicationOutputsCollectionName,  SDFHLOAD,SCEELKED\n** Creating / verifying build dataset DBEHM.DBB.BUILD.LINK\n** Creating / verifying build dataset DBEHM.DBB.BUILD.OBJ\n** Creating / verifying build dataset DBEHM.DBB.BUILD.LOAD\n*** Building file MortgageApplication/link/epsmlist.lnk\nLink-Edit parms for MortgageApplication/link/epsmlist.lnk = MAP,RENT,COMPAT(PM5),SSI=2b3add1e\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\n   \"cics\": false,\n   \"dli\": false,\n   \"file\": \"MortgageApplication\\/link\\/epsmlist.lnk\",\n   \"language\": \"ZBND\",\n   \"lname\": \"EPSMLIST\",\n   \"logicalDependencies\": [\n      {\n         \"category\": \"LINK\",\n         \"library\": \"DBEHM.DBB.BUILD.LOAD\",\n         \"lname\": \"EPSMPMT\"\n      },\n      {\n         \"category\": \"LINK\",\n         \"library\": \"DBEHM.DBB.BUILD.OBJ\",\n         \"lname\": \"EPSMLIST\"\n      }\n   ],\n   \"mq\": false,\n   \"sql\": false\n}\n** Building files mapped to Transfer.groovy script\nrequired props = transfer_srcPDS,transfer_dsOptions,  transfer_deployType\n*** Transferring file MortgageApplication/jcl/MYSAMP.jcl\n** Creating / verifying build dataset DBEHM.DBB.BUILD.JCL\n** Copied MortgageApplication/jcl/MYSAMP.jcl to DBEHM.DBB.BUILD.JCL with deployType JCL (rc = 0)\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 2b3add1e85a8124ff1d7af6ab1de2e5463325d7a\n** Setting property :giturl:MortgageApplication : https://github.com/dennis-behm/dbb-zappbuild.git\n** Setting property :gitchangedfiles:MortgageApplication : https://github.com/ibm/dbb-zappbuild/compare/cf6bc732bd717b404c5cf71a8f8d14458138a2d0..2b3add1e85a8124ff1d7af6ab1de2e5463325d7a\n** Writing build report data to /var/dbb/work/mortgageout/build.20230425.160722.007/BuildReport.json\n** Writing build report to /var/dbb/work/mortgageout/build.20230425.160722.007/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-350_preview_builds BuildLabel:build.20230425.160722.007\n** Build ended at Tue Apr 25 16:07:34 GMT+01:00 2023\n** Build State : CLEAN\n** Build ran in preview mode.\n** Total files processed : 5\n** Total build time  : 12.204 seconds\n\n** Build finished\n</code></pre>"},{"location":"BUILD/#perform-a-scan-source-build","title":"Perform a Scan Source build","text":"<p><code>--fullBuild --scanSource</code> skips the actual building and only scan source files to store dependency data in the collection (migration scenario). Please be aware that it scans all programs including the copybooks, which is required to perform proper impact analysis.</p> <p>This build type also stores a build result to build a baseline for following impact builds.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --fullBuild \\\n                      --scanSource \\\n                      --verbose\n</code></pre> Build log <pre><code>** Build start at 20210622.104821.048\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --fullBuild --scanSource --verbose\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\njava.version=8.0.6.20 - pmz6480sr6fp20-20201120_02(SR6 FP20)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/ZT01/var/dbb\n** Build properties at start up:\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.104821.048\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.104821.048 at https://dbb-webapp:8080/dbb/rest/buildResult/47074\n** --fullBuild option selected. Scanning all programs for application MortgageApplication\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.104821.048/buildList.txt\nMortgageApplication/copybook/epsmtout.cpy\nMortgageApplication/cobol/epsnbrvl.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/bms/epsmort.bms\nMortgageApplication/link/epsmlist.lnk\nMortgageApplication/copybook/epsmortf.cpy\nMortgageApplication/copybook/epsnbrpm.cpy\nMortgageApplication/bms/epsmlis.bms\nMortgageApplication/copybook/epsmtcom.cpy\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/copybook/epsmtinp.cpy\nMortgageApplication/copybook/epspdata.cpy\nMortgageApplication/cobol/epsmpmt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/cobol/epscsmrd.cbl\n** Scanning source code.\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/copybook/epsmtout.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtout.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtout.cpy =\n{\"dli\":false,\"lname\":\"EPSMTOUT\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsnbrvl.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsnbrvl.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsnbrvl.cbl =\n{\"dli\":false,\"lname\":\"EPSNBRVL\",\"file\":\"MortgageApplication\\/cobol\\/epsnbrvl.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscsmrt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrt.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmort.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmort.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmort.bms =\n{\"dli\":false,\"lname\":\"EPSMORT\",\"file\":\"MortgageApplication\\/bms\\/epsmort.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/link/epsmlist.lnk (/var/dbb/dbb-zappbuild/samples/MortgageApplication/link/epsmlist.lnk)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/link/epsmlist.lnk =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmortf.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmortf.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmortf.cpy =\n{\"dli\":false,\"lname\":\"EPSMORTF\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsnbrpm.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsnbrpm.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsnbrpm.cpy =\n{\"dli\":false,\"lname\":\"EPSNBRPM\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmlis.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmlis.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmlis.bms =\n{\"dli\":false,\"lname\":\"EPSMLIS\",\"file\":\"MortgageApplication\\/bms\\/epsmlis.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\"dli\":false,\"lname\":\"EPSMTCOM\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmlist.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmlist.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmlist.cbl =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/cobol\\/epsmlist.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtinp.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtinp.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtinp.cpy =\n{\"dli\":false,\"lname\":\"EPSMTINP\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epspdata.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epspdata.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epspdata.cpy =\n{\"dli\":false,\"lname\":\"EPSPDATA\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmpmt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmpmt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmpmt.cbl =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscmort.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscmort.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscmort.cbl =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\"}],\"language\":\"COB\",\"sql\":true}\n*** Scanning file MortgageApplication/cobol/epscsmrd.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrd.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrd.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRD\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrd.cbl\",\"mq\":false,\"cics\":true,\"language\":\"COB\",\"sql\":false}\n** Storing 15 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.104821.048/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.104821.048/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.104821.048 at https://dbb-webapp:8080/dbb/rest/buildResult/47074\n** Build ended at Tue Jun 22 10:48:36 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 15\n** Total build time  : 15.319 seconds\n\n** Build finished\n</code></pre>"},{"location":"BUILD/#perform-a-scan-source-outputs-build","title":"Perform a Scan Source + Outputs build","text":"<p><code>--fullBuild --scanAll</code> skips the actual building and only scan source files and existing load modules to dependency data in source and output collection (migration scenario with static linkage scenarios). This build type also stores a build result to build a baseline for following impact builds.</p> <p>Please see also the TechDoc for Advanced Build and Migration recipes</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --fullBuild \\\n                      --scanAll \\\n                      --verbose\n</code></pre> Build log <pre><code>** Build start at 20210622.105915.059\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --fullBuild --scanAll --verbose\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\njava.version=8.0.6.20 - pmz6480sr6fp20-20201120_02(SR6 FP20)\njava.home=/V2R4/usr/lpp/java/J8.0_64\nuser.dir=/ZT01/var/dbb\n** Build properties at start up:\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.105915.059\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.105915.059 at https://dbb-webapp:8080/dbb/rest/buildResult/47085\n** Created collection MortgageApplication-master\n** Created collection MortgageApplication-master-outputs\n** --fullBuild option selected. Scanning all programs for application MortgageApplication\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.105915.059/buildList.txt\nMortgageApplication/copybook/epsmtout.cpy\nMortgageApplication/cobol/epsnbrvl.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/bms/epsmort.bms\nMortgageApplication/link/epsmlist.lnk\nMortgageApplication/copybook/epsmortf.cpy\nMortgageApplication/copybook/epsnbrpm.cpy\nMortgageApplication/bms/epsmlis.bms\nMortgageApplication/copybook/epsmtcom.cpy\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/copybook/epsmtinp.cpy\nMortgageApplication/copybook/epspdata.cpy\nMortgageApplication/cobol/epsmpmt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/cobol/epscsmrd.cbl\n** Scanning source code.\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/copybook/epsmtout.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtout.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtout.cpy =\n{\"dli\":false,\"lname\":\"EPSMTOUT\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsnbrvl.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsnbrvl.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsnbrvl.cbl =\n{\"dli\":false,\"lname\":\"EPSNBRVL\",\"file\":\"MortgageApplication\\/cobol\\/epsnbrvl.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscsmrt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrt.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmort.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmort.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmort.bms =\n{\"dli\":false,\"lname\":\"EPSMORT\",\"file\":\"MortgageApplication\\/bms\\/epsmort.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/link/epsmlist.lnk (/var/dbb/dbb-zappbuild/samples/MortgageApplication/link/epsmlist.lnk)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/link/epsmlist.lnk =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmortf.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmortf.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmortf.cpy =\n{\"dli\":false,\"lname\":\"EPSMORTF\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsnbrpm.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsnbrpm.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsnbrpm.cpy =\n{\"dli\":false,\"lname\":\"EPSNBRPM\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/bms/epsmlis.bms (/var/dbb/dbb-zappbuild/samples/MortgageApplication/bms/epsmlis.bms)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/bms/epsmlis.bms =\n{\"dli\":false,\"lname\":\"EPSMLIS\",\"file\":\"MortgageApplication\\/bms\\/epsmlis.bms\",\"mq\":false,\"cics\":false,\"language\":\"ASM\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\"dli\":false,\"lname\":\"EPSMTCOM\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmlist.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmlist.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmlist.cbl =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/cobol\\/epsmlist.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epsmtinp.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtinp.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtinp.cpy =\n{\"dli\":false,\"lname\":\"EPSMTINP\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/copybook/epspdata.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epspdata.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epspdata.cpy =\n{\"dli\":false,\"lname\":\"EPSPDATA\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"mq\":false,\"cics\":false,\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epsmpmt.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epsmpmt.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epsmpmt.cbl =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n*** Scanning file MortgageApplication/cobol/epscmort.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscmort.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscmort.cbl =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":true,\"logicalDependencies\":[{\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\"}],\"language\":\"COB\",\"sql\":true}\n*** Scanning file MortgageApplication/cobol/epscsmrd.cbl (/var/dbb/dbb-zappbuild/samples/MortgageApplication/cobol/epscsmrd.cbl)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/cobol/epscsmrd.cbl =\n{\"dli\":false,\"lname\":\"EPSCSMRD\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrd.cbl\",\"mq\":false,\"cics\":true,\"language\":\"COB\",\"sql\":false}\n** Storing 15 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n** Scanning load modules.\n*** Scanning file with the default scanner\n*** Skipped scanning module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSNBRVL) of MortgageApplication/cobol/epsnbrvl.cbl.\n*** Scanning file with the default scanner\n*** Scanning load module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSCSMRT) of MortgageApplication/cobol/epscsmrt.cbl\n*** Scanning load module for MortgageApplication/cobol/epscsmrt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** No language prefix defined for BMS.groovy.\n*** Skipped scanning outputs of MortgageApplication/bms/epsmort.bms. No language prefix found.\n*** Scanning file with the default scanner\n*** Scanning load module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSMLIST) of MortgageApplication/link/epsmlist.lnk\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMPMT\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.LOAD\",\"category\":\"LINK\"},{\"lname\":\"EPSMLIST\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** No language prefix defined for BMS.groovy.\n*** Skipped scanning outputs of MortgageApplication/bms/epsmlis.bms. No language prefix found.\n*** Scanning file with the default scanner\n*** Skipped scanning module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSMLIST) of MortgageApplication/cobol/epsmlist.cbl.\n*** Scanning file with the default scanner\n*** Scanning load module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSMPMT) of MortgageApplication/cobol/epsmpmt.cbl\n*** Scanning load module for MortgageApplication/cobol/epsmpmt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMPMT\",\"file\":\"MortgageApplication\\/cobol\\/epsmpmt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Scanning file with the default scanner\n*** Scanning load module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSCMORT) of MortgageApplication/cobol/epscmort.cbl\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Scanning file with the default scanner\n*** Scanning load module DBB.ZAPP.CLEAN.MASTER.LOAD(EPSCSMRD) of MortgageApplication/cobol/epscsmrd.cbl\n*** Scanning load module for MortgageApplication/cobol/epscsmrd.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRD\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrd.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.105915.059/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.105915.059/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.105915.059 at https://dbb-webapp:8080/dbb/rest/buildResult/47085\n** Build ended at Tue Jun 22 10:59:39 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 15\n** Total build time  : 23.718 seconds\n</code></pre>"},{"location":"BUILD/#dynamically-overwrite-build-properties","title":"Dynamically Overwrite build properties","text":"<p>Dependending on where are in your development process, you might want to dynamically overwrite a build property. One scenario is for example to set the <code>mainBuildBranch</code> option which is used also to clone collections and initialize the DBB collections. See Perform Impact Build for topic branches</p> <p>To dynamically overwrite any build property, you can make use of the <code>--propOverwrite</code> cli argument. To overwrite a build property, pass it in as a key-value pair via the CLI. Several key-value pairs can be passed by comma-separating them :<code>--propOverwrite mainBuildBranch=develop,cobol_compilerVersion=V6</code>. Please note, that values which contain a comma (<code>,</code>) cannot be passed into the list. Please also make sure that you don't run into any limitations with regards of the length of the overall build command. For mass overwrites, use the <code>--propFiles</code> option to pass in one or several property files.</p> <pre><code>groovyz dbb-zappbuild/build.groovy \\\n                      --workspace /var/dbb/dbb-zappbuild/samples \\\n                      --hlq DBB.ZAPP.CLEAN.MASTER \\\n                      --workDir /var/dbb/out/MortgageApplication \\\n                      --application MortgageApplication \\\n                      --logEncoding UTF-8 \\\n                      --impactBuild \\\n                      --verbose \\\n                      --propOverwrite mainBuildBranch=develop\n</code></pre> Build log <pre><code>** Build start at 20210622.082942.029\n** Input args = /var/dbb/dbb-zappbuild/samples --hlq DBB.ZAPP.CLEAN.MASTER --workDir /var/dbb/out/MortgageApplication --application MortgageApplication --logEncoding UTF-8 --impactBuild --verbose --propOverwrite mainBuildBranch=develop\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/datasets.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Assembler.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/BMS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/MFS.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/Cobol.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/PLI.properties\n** Loading property file /ZT01/var/dbb/dbb-zappbuild/build-conf/ZunitConfig.properties\n** appConf = /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /var/dbb/dbb-zappbuild/samples/MortgageApplication/application-conf/LinkEdit.properties\n** Overwriting build property mainBuildBranch from cli argument --propOverwrite with value develop\n..... // lists of all build properties\n** Repository client created for https://dbb-webapp:8080/dbb\n** Build output located at /var/dbb/out/MortgageApplication/build.20210622.082942.029\n** Build result created for BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082942.029 at https://dbb-webapp:8080/dbb/rest/buildResult/47012\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n** Getting current hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Getting baseline hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Storing MortgageApplication : 75e13783f2197e12772cec64a16937707ea623a5\n** Calculating changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Diffing baseline 75e13783f2197e12772cec64a16937707ea623a5 -&gt; current 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n*** Changed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n**** MortgageApplication/copybook/epsmtcom.cpy\n*** Deleted files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n*** Renamed files for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication:\n** Updating collections MortgageApplication-master and MortgageApplication-master-outputs\n*** Scanning file MortgageApplication/copybook/epsmtcom.cpy (/var/dbb/dbb-zappbuild/samples/MortgageApplication/copybook/epsmtcom.cpy)\n*** Scanning file with the default scanner\n*** Logical file for MortgageApplication/copybook/epsmtcom.cpy =\n{\"dli\":false,\"lname\":\"EPSMTCOM\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"category\":\"COPY\"},{\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"category\":\"COPY\"}],\"language\":\"COB\",\"sql\":false}\n** Storing 1 logical files in repository collection 'MortgageApplication-master'\nHTTP/1.1 200 OK\n** Performing impact analysis on changed file MortgageApplication/copybook/epsmtcom.cpy\n*** Creating impact resolver for MortgageApplication/copybook/epsmtcom.cpy with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                },{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/bms\"} ]             },{\"category\": \"LINK\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/cobol\"}, {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/link\"} ]             }] rules\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/link/epsmlist.lnk\n** MortgageApplication/link/epsmlist.lnk is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epsmlist.cbl\n** MortgageApplication/cobol/epsmlist.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscsmrt.cbl\n** MortgageApplication/cobol/epscsmrt.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Found impacted file MortgageApplication/cobol/epscmort.cbl\n** MortgageApplication/cobol/epscmort.cbl is impacted by changed file MortgageApplication/copybook/epsmtcom.cpy. Adding to build list.\n** Writing build list file to /var/dbb/out/MortgageApplication/build.20210622.082942.029/buildList.txt\nMortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/link/epsmlist.lnk\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\nrequired props = cobol_srcPDS,cobol_cpyPDS,cobol_objPDS,cobol_loadPDS,cobol_compiler,cobol_linkEditor,cobol_tempOptions,applicationOutputsCollectionName,  SDFHCOB,SDFHLOAD,SDSNLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COBOL\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.COPY\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.DBRM\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epsmlist.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epsmlist.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epsmlist.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMLIS\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMORTF\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmortf.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epsmlist.cbl = LIB,CICS\n*** Building file MortgageApplication/cobol/epscsmrt.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscsmrt.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscsmrt.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscsmrt.cbl:\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSPDATA\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epspdata.cpy\",\"category\":\"COPY\",\"resolved\":true}\nCobol compiler parms for MortgageApplication/cobol/epscsmrt.cbl = LIB,CICS\n*** Scanning load module for MortgageApplication/cobol/epscsmrt.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCSMRT\",\"file\":\"MortgageApplication\\/cobol\\/epscsmrt.cbl\",\"mq\":false,\"cics\":false,\"language\":\"ZBND\",\"sql\":false}\n*** Building file MortgageApplication/cobol/epscmort.cbl\n*** Creating dependency resolver for MortgageApplication/cobol/epscmort.cbl with [{\"library\": \"SYSLIB\", \"searchPath\": [ {\"sourceDir\": \"/var/dbb/dbb-zappbuild/samples\", \"directory\": \"MortgageApplication/copybook\"} ]                }] rules\n*** Scanning file with the default scanner\n*** Resolution rules for MortgageApplication/cobol/epscmort.cbl:\n{\"library\":\"SYSLIB\",\"searchPath\":[{\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"directory\":\"MortgageApplication\\/copybook\"}]}\n*** Physical dependencies for MortgageApplication/cobol/epscmort.cbl:\n{\"excluded\":false,\"lname\":\"DFHAID\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"lname\":\"EPSMORT\",\"library\":\"SYSLIB\",\"category\":\"COPY\",\"resolved\":false}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTINP\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtinp.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTOUT\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtout.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSMTCOM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsmtcom.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"sourceDir\":\"\\/var\\/dbb\\/dbb-zappbuild\\/samples\",\"lname\":\"EPSNBRPM\",\"library\":\"SYSLIB\",\"file\":\"MortgageApplication\\/copybook\\/epsnbrpm.cpy\",\"category\":\"COPY\",\"resolved\":true}\n{\"excluded\":false,\"lname\":\"SQLCA\",\"library\":\"SYSLIB\",\"category\":\"SQL INCLUDE\",\"resolved\":false}\nCobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Scanning load module for MortgageApplication/cobol/epscmort.cbl\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSCMORT\",\"file\":\"MortgageApplication\\/cobol\\/epscmort.cbl\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSNBRVL\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n** Building files mapped to LinkEdit.groovy script\nrequired props = linkedit_srcPDS,linkedit_objPDS,linkedit_loadPDS,linkedit_linkEditor,linkedit_tempOptions,applicationOutputsCollectionName,  SDFHLOAD,SCEELKED\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LINK\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.OBJ\n** Creating / verifying build dataset DBB.ZAPP.CLEAN.MASTER.LOAD\n*** Building file MortgageApplication/link/epsmlist.lnk\n*** Creating dependency resolver for MortgageApplication/link/epsmlist.lnk with null rules\n*** Scanning file with the default scanner\n*** Scanning load module for MortgageApplication/link/epsmlist.lnk\n*** Logical file =\n{\"dli\":false,\"lname\":\"EPSMLIST\",\"file\":\"MortgageApplication\\/link\\/epsmlist.lnk\",\"mq\":false,\"cics\":false,\"logicalDependencies\":[{\"lname\":\"EPSMPMT\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.LOAD\",\"category\":\"LINK\"},{\"lname\":\"EPSMLIST\",\"library\":\"DBB.ZAPP.CLEAN.MASTER.OBJ\",\"category\":\"LINK\"}],\"language\":\"ZBND\",\"sql\":false}\n*** Obtaining hash for directory /var/dbb/dbb-zappbuild/samples/MortgageApplication\n** Setting property :githash:MortgageApplication : 857266a44a6e859c4f949adb7e32cfbc4a8bd736\n** Setting property :giturl:MortgageApplication : git@github.ibm.com:zDevOps-Acceleration/dbb-zappbuild.git\n** Writing build report data to /var/dbb/out/MortgageApplication/build.20210622.082942.029/BuildReport.json\n** Writing build report to /var/dbb/out/MortgageApplication/build.20210622.082942.029/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-master BuildLabel:build.20210622.082942.029 at https://dbb-webapp:8080/dbb/rest/buildResult/47012\n** Build ended at Tue Jun 22 08:29:59 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 4\n** Total build time  : 17.239 seconds\n</code></pre>"},{"location":"FilePropertyManagement/","title":"File Property Management","text":""},{"location":"FilePropertyManagement/#introduction","title":"Introduction","text":"<p>This document explains how to define compiler and other options when building a program or subset of programs with zAppBuild. Building mainframe application programs requires configuring various parameters and options for the different build steps, such as the pre-compile, compile, or link-edit step. For example, an application can contain COBOL programs that need to be link edited with the option <code>NCAL</code> or without the option <code>NCAL</code> for different purposes. An override may be required for any build parameter for the various build steps like compile parameters, bind parameters, link edit parameters, and so on.</p> <p>In existing mainframe toolchains, this customization is performed by assigning a type to the application artifact<sup>1</sup>. This type is often used to specify the build parameters and options for an entire subgroup of application artifacts. Additionally, it allows that an application program might have some individual overrides as well.</p> <p>Generally, each build parameter for an application artifact will either have a default value or an override of the default value.</p>"},{"location":"FilePropertyManagement/#overriding-build-properties-with-dbb-and-zappbuild","title":"Overriding build properties with DBB and zAppBuild","text":"<p>Dependency Based Build comes with its own APIs to manage build properties, which extend the standard key-value pair strategy of java.util.Properties. DBB refers to the term File properties to allow overriding the corresponding default build properties using the DBB file property path syntax. See IBM DBB Docs - Build properties for more details about this syntax.</p> <p>zAppBuild supports overriding the majority of build properties defined within its framework. The full list can be viewed at application-conf/README.md.</p> <p>zAppBuild leverages DBB's API and allows you to define build parameters on three different levels for each language script:</p> <ol> <li>General defaults in the corresponding language properties files: For example, you can define the compile options for building COBOL programs in application-conf/Cobol.properties. Property keys make use of a language prefix; for instance, COBOL property keys are prefixed with <code>cobol_</code>.</li> <li>A group definition that overrides the general default in one of two ways:</li> <li>By using DBB's file property syntax in application-conf/file.properties, and specifying the application artifact group via a pattern filter on the path name(s)</li> <li>By mapping to a language configuration file to override the defaults, such as in application-conf/languageConfigurationMapping.properties</li> <li>An individual file-level definition that overwrites the general default in one of two ways:</li> <li>By using DBB's file properties syntax in application-conf/file.properties, and specifying the application artifact's path as the file path pattern</li> <li>By specifying multiple parameters for a specific file using the individual artifact properties file. For example: epsmlist.cbl.properties.</li> </ol> <p>zAppBuild comes with various build property strategies that can be combined via an order of precedence. The following table summarizes the strategies for overriding file properties from highest to lowest precedence:</p> Precedence Strategy Use case Implementation 1. Individual artifact properties file Override one or multiple build parameters for individual files DBB file property defining an override for the specific file<sup>2</sup> 2. Language configuration mapping Override and define one or multiple build parameters for a group of mapped application artifacts DBB file property defining an override for the specific file(s)<sup>2</sup> 3. DBB file properties Override a single build parameter for individual files or a grouped list of application artifacts DBB file property defining an override for the specific<sup>2</sup>  or grouped list<sup>3</sup> of application artifacts 4. Default properties General build properties used when no overrides are defined Build property defining the default value for all files <p>To understand the order of precedence, think of this as a merge of the property configurations. For example, if both an individual artifact properties file and a language configuration mapping are configured for a file, then the properties defined through the individual artifact properties file take precedence, but are also merged with other properties defined by the language configuration mapping and the default properties.</p> <p>The following sections explain these build property strategies in more detail.</p>"},{"location":"FilePropertyManagement/#default-properties","title":"Default properties","text":"<p>Default properties can be set in the corresponding language properties file. For example, the COBOL file properties can be set in application-conf/Cobol.properties, while the Assembler file properties can be set in application-conf/Assembler.properties, and so on.</p> <p>By default, zAppBuild applies the properties stored in the application-conf folder of the application repository, which allows the application team to have control over these files. These property definitions in application-conf take precedence over corresponding properties defined in the build-conf folder. If you are looking for a more centralized way to manage the default options for all applications, you can move the relevant property definitions into the zAppBuild build framework itself by taking them out of the application-conf folder, and then only storing them in one of the following locations:</p> <ul> <li>In the appropriate language properties file(s) under build-conf</li> <li>In a separate directory within zAppBuild itself, while using the applicationConfRootDir property in build-conf/build.properties</li> </ul>"},{"location":"FilePropertyManagement/#overriding-properties","title":"Overriding properties","text":"<p>The following section describes the various strategies to override default build property values. The DBB file property syntax is the most commonly used approach within the zAppBuild samples. Two alternate approaches to override build properties are implemented in zAppBuild to serve the different use cases, and can be used to simplify the adoption of zAppBuild by either leveraging an individual artifact properties file per application artifact, or by defining a language configuration mapping.</p>"},{"location":"FilePropertyManagement/#dbb-file-properties","title":"DBB file properties","text":"<p>The most common way to override a single build parameter makes use of the DBB file property syntax. This strategy can be applied to individual artifacts or groups of artifacts.</p> <p>For example, to use a DBB file property to override the default COBOL compile parameters for build artifact <code>MortgageApplication/cobol/epsnbrvl.cbl</code>, follow the DBB file property syntax in <code>file.properties</code>, which is the default property file for configuring file property overrides:</p> <pre><code>cobol_compileParms=LIB,SOURCE :: **/cobol/epsnbrvl.cbl\n</code></pre> <p>For merging the property values of this file-level override with the default COBOL compile parameters (rather than just overriding them), you can specify the following syntax:</p> <pre><code>cobol_compileParms=${cobol_compileParms},SOURCE :: **/cobol/epsnbrvl.cbl\n</code></pre> <p>In order to override the build parameter for a group of files, you can use wildcards when specifying the file path pattern in DBB's file property path syntax. For example, let's assume that you are storing all CICS modules in the <code>cobol_cics</code> subfolder. Using the following sample will ensure that the file flag <code>isCICS</code> is set to <code>true</code> for all COBOL files in this subfolder with the file extension <code>*.cbl</code>.</p> <pre><code>isCICS = true :: **/cobol_cics/*.cbl\n</code></pre> <ul> <li>Note: We do not recommend organizing the layout of repository folders/files based on build property management, because future updates to the build information of a file could require it to be moved into different folders. Instead, we recommend that the repository's folder layout represent the functional context of the files.</li> </ul> <p>The MortgageApplication sample contains a good example of how the DBB file property can be used. Typically, these overrides are defined in application-conf/file.properties.</p>"},{"location":"FilePropertyManagement/#individual-artifact-properties-file","title":"Individual artifact properties file","text":"<p>The approach of using the DBB file property syntax might become cumbersome if you want to manage multiple property overrides for a given application artifact.</p> <p>The \"individual artifact properties file\" strategy changes the way of specifying the properties by allowing you to manage multiple property overrides together within an individual properties file for a given build artifact. It centers around the build artifact rather than the build property.</p> <p>The functionality to load properties from an individual artifact properties file can be activated by setting the configuration property <code>loadFileLevelProperties</code> in the <code>application-conf/application.properties</code> file to <code>true</code>. To enable this feature for a specific artifact or a subset of application artifacts, use the DBB file property syntax in <code>application-conf/file.properties</code> to set <code>loadFileLevelProperties</code> to <code>true</code>. The following snippet from a sample <code>application-conf/file.properties</code> file configures zAppBuild to look for an individual artifact properties file for all the programs starting with <code>eps</code> and <code>lga</code>:</p> <pre><code>loadFileLevelProperties = true :: **/cobol/eps*.cbl, **/cobol/lga*.cbl` \n</code></pre> <p>Individual artifact properties files are resolved using the pattern <code>&lt;propertyFilePath directory&gt;/&lt;sourceFile&gt;.&lt;propertyFileExtension&gt;</code>. The <code>propertyFilePath</code> and <code>propertyFileExtension</code> can be customized in application-conf/application.properties. For example, for the source file <code>epsmlist.cbl</code>, the process searches for an individual artifact properties file in the defined <code>propertyFilePath</code> directory. If no corresponding properties file is found, the build will use the default build values or, if any file properties were defined using the DBB file property path syntax or an alternate approach, then the build will use those.</p> <p>Once the <code>loadFileLevelProperties</code> property functionality is enabled, create a properties file for each application artifact for which individual artifact properties need to be defined. For example, to override build parameters for the file <code>epsmlist.cbl</code>, create the properties file <code>epsmlist.cbl.properties</code> in the defined <code>propertyFilePath</code> folder. The name of the properties file needs to have the entire source file name including the extension; hence, the properties file for <code>epsmlist.cbl</code> needs to be named <code>epsmlist.cbl.properties</code>.</p> <p>The individual artifact properties file allows you to define multiple build properties using the standard property syntax. For instance, in <code>epsmlist.cbl.properties</code>, you can define the following properties:</p> <pre><code>cobol_compileParms=LIB,SOURCE\nisCICS = true\n</code></pre> <p>With the above configuration, zAppBuild will import these properties and set them as DBB file properties.</p> <p>You can view a sample individual artifact properties file, epsmlist.cbl.properties, within the MortgageApplication sample.</p> <p>Note: Overrides for a given build property should be managed either via the DBB file property path syntax or in the individual artifact properties files, but not both at the same time (as this can cause unpredictable behavior). The following example shows how both approaches for defining file properties can be combined to specify a set of build properties for the same source file:</p> <ul> <li>Example using the DBB file property path syntax and an individual artifact properties file to define build properties for a source file named <code>app/cobol/AB123456.cbl</code>:</li> <li> <p>You can use the DBB file property path syntax to define a file property for a group of files. The below defines the <code>deployType</code> for all source files in the folder cobol beginning with <code>AB*</code> to be <code>BATCHLOAD</code>:</p> <pre><code>cobol_deployType = BATCHLOAD :: **/cobol/AB*.cbl\n</code></pre> </li> <li> <p>At the same time, you can define an individual artifact properties file for <code>app/cobol/AB123456.cbl</code> with the following different build property:</p> <pre><code>cobol_compileParms = LIB,SOURCE\n</code></pre> </li> <li> <p>During the build, the file <code>app/cobol/AB123456.cbl</code> will have the <code>deployType</code> <code>BATCHLOAD</code> and the COBOL compile parameters <code>LIB</code> and <code>SOURCE</code>.</p> </li> </ul>"},{"location":"FilePropertyManagement/#language-configuration-mapping","title":"Language configuration mapping","text":"<p>An alternative way to define build properties for a subgroup of files is by leveraging a mapping approach. Rather than specifying individual parameters or properties for an individual application artifact, the application artifacts are mapped to a language configuration, which can then define multiple build parameters in a central language configuration properties file. All mapped application artifacts will inherit those defined build parameters.</p> <p>This approach consists of:</p> <ul> <li>Language configuration mapping file: A mapping of the application artifact(s) to a language configuration file</li> <li>Language configuration properties file(s): For each language configuration, a properties file defining that language's build parameters</li> </ul> <p>The \"language configuration mapping\" approach can be enabled by setting the property <code>loadLanguageConfigurationProperties</code> in the <code>application-conf/application.properties</code> file to <code>true</code>. To enable this option for a specific file or a set of files, use the DBB file property syntax and set  <code>loadLanguageConfigurationProperties</code> to <code>true</code> in the <code>application-conf/file.properties</code> file. Below is a sample to enable language configuration mapping for all programs starting with <code>eps</code> and <code>lga</code> via the <code>application-conf/file.properties</code> file:</p> <pre><code>loadLanguageConfigurationProperties = true :: **/cobol/eps*.cbl, **/cobol/lga*.cbl\n</code></pre> <p>You can specify build properties for a language in a language configuration properties file, which should be created in the <code>build-conf/language-conf</code> folder. zAppBuild will import these properties from the language configuration properties file and set them as DBB file properties for the mapped artifacts. You can implement multiple language configurations to serve different variations or types by creating multiple language configuration properties files under the <code>build-conf/language-conf</code> folder. A sample language configuration properties file can be found at languageConfigProps01.properties.  </p> <p>A language configuration properties file allows you to centrally specify build properties for the group of mapped application artifacts. All mapped files will inherit those build properties. However, in the case of combining the language configuration mapping with an individual artifact properties file override, for any build property that is defined in both places, the property definition in the individual artifact properties file will take precedence and be applied. Properties that are not specified in the individual artifact properties file will be defined by lower precedence strategies - that is, from the language configuration mapping if defined there, or if not, then from the default properties.</p> <p>In the following sample language configuration properties file, the properties defined in this snippet are overriding the default COBOL compile parameters (<code>cobol_compileParms</code>), the file flag <code>isCICS</code>, and the linkEdit statement (<code>cobol_linkEditStream</code>):</p> <pre><code>cobol_compileParms=LIB,SOURCE\nisCICS = true\ncobol_linkEditStream=    INCLUDE OBJECT(@{member})\\n    INCLUDE SYSLIB(CUSTOBJ)\n</code></pre> <p>To map files to a language configuration, create a <code>languageConfigurationMapping.properties</code> file in the <code>application-conf</code> folder of your application repository. Then, within this new language configuration mapping file, map each artifact to its corresponding language configuration using the syntax <code>&lt;sourceFileName.extension&gt;=&lt;languageConfigurationPropertiesFileName&gt;</code>.</p> <ul> <li>For example, the following snippet in application-conf/languageConfigurationMapping.properties maps both source files <code>epsnbrvl.cbl</code> and <code>epsmlist.cbl</code> to use the properties defined in <code>build-conf/language-conf/languageConfigProps01.properties</code>,  while the source file <code>epscmort.cbl</code> is mapped to use the properties defined in <code>build-conf/language-conf/languageConfigProps02.properties</code> for language configuration mapping overrides:</li> </ul> <pre><code>epsnbrvl.cbl=languageConfigProps01\nepsmlist.cbl=languageConfigProps01\nepscmort.cbl=languageConfigProps02\n</code></pre> <p>See languageConfigurationMapping.properties for a sample language configuration mapping file.</p> <ol> <li> <p>The term \"artifact\" and \"file\" in this document refer to program source code that will built (as opposed to JCL or other non-buildable items), for example by DBB.\u00a0\u21a9</p> </li> <li> <p>DBB is managing the DBB file properties in its separate internal table compared to the default properties. This table leverages the combination of [property name + file pattern] as the key of the internal table. When the same key is declared a second time, it overrides the first one.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Because of managing DBB file properties is done in a single table, you can experience unpredictable behaviour when mixing qualified file path pattern definitions and file path patterns containing wildcards for the same property name.\u00a0\u21a9</p> </li> </ol>"},{"location":"HOWTOS/","title":"How-to and Frequently Asked Questions","text":"<p>This page collects information to configure and use specific features of zAppBuild. Available How-tos:</p> <ul> <li>How-to and Frequently Asked Questions</li> <li>Signing load modules and program objects</li> <li>Reduce necessary application-conf configurations within the application repository</li> </ul>"},{"location":"HOWTOS/#signing-load-modules-and-program-objects","title":"Signing load modules and program objects","text":"<p>zAppBuild can be configured to automatically insert a reference of the version of the source code (the githash), which was used to build the executables. At the moment, the feature is only available for build files which are mapped to <code>Assembler.groovy</code>, <code>Cobol.groovy</code> and <code>PLI.groovy</code>. It is available for pipeline builds.</p> <p>It leverages the IDENTIFY statement of the linkage editor.</p> <p>How to enable the signing</p> <p>The feature is enabled by default and is controlled via the <code>assembler_identifyLoad</code>, <code>cobol_identifyLoad</code> and the <code>pli_identifyLoad</code> properties managed in the corresponding property files of the language scripts.</p> <p>What to expect</p> <p>The feature will generate the linker statement <code>IDENTIFY</code> for the build file. It follows the structure: <pre><code>   IDENTIFY BUILDMEMBER('APPLICATION/SHORT-GIT-HASH')\n</code></pre></p> <p>For instance for MortgageApplication/cobol/epscmort.cbl: <pre><code>   IDENTIFY EPSCMORT('MortgageApplication/a21b6ab0')\n</code></pre></p> <p>With verbose tracing of zAppBuild, you can find the information in the build log:</p> <pre><code>*** Cobol compiler parms for MortgageApplication/cobol/epscmort.cbl = LIB,CICS,SQL\n*** Link-Edit parms for MortgageApplication/cobol/epscmort.cbl = MAP,RENT,COMPAT(PM5),SSI=0f2caa66\n*** Generated linkcard input stream: \n   IDENTIFY EPSCMORT('MortgageApplication/a21b6ab0')\n</code></pre> <p>Alternatively, you can also find the information in the link listing: <pre><code>1z/OS V2 R4 BINDER     11:29:22 MONDAY JUNE 19, 2023\n BATCH EMULATOR  JOB(DBEHM4  ) STEP(*OMVSEX ) PGM= IEWBLINK\n IEW2278I B352 INVOCATION PARAMETERS - MAP,RENT,COMPAT(PM5),SSI=a21b6ab0\n IEW2322I 1220  1     IDENTIFY EPSCMORT('MortgageApplication/a21b6ab0')\n\n1                         *** M O D U L E  M A P ***\n...\n</code></pre></p> <p>Known limitations * It does not generate the information for link cards, that are managed in the git repository * It does not manage scenarios where multiple object decks are assembled into the load module</p> <p>When is this useful?</p> <p>If you want to quickly understand the version of the source code which is running in a runtime, you can use the amblist service aid to retrieve the information for a load module or a program object. The IDENTIFY information can help you to understand to which application the module belongs and which version of the source code was used to build the executed module.</p> <p>The following sample JCL showcases the use of AMBLIST to display load modules' or program objects' information:</p> <pre><code>//AMBLIST1 JOB (8550,030A,20,30),'AMBLIST JOB', // CLASS=A,MSGCLASS=T,NOTIFY=&amp;SYSUID\n//*\n//ABML EXEC PGM=AMBLIST\n//SYSPRINT DD SYSOUT=*\n//SYSOUT DD SYSOUT=*\n//STEPLIB DD DSN=SYS1.LINKLIB,DISP=SHR\n//*MYLOAD DD DSN=JENKINS.ZAPP.CLEAN.LOAD,DISP=SHR\n//MYLOAD DD DSN=IBMUSER.DBB.BUILD.LOAD,DISP=SHR\n//SYSIN DD *\n    LISTIDR DDN=MYLOAD,MEMBER=EPSCMORT\n/*\n//*\n</code></pre> <p>In the output of amblist, locate the user data section and find the data that the linkage-editor inserted:</p> <pre><code>          DATE         USER DATA\nCSECT:    EPSCMORT\n          06/19/2023   MortgageApplication/a21b6ab0\n</code></pre>"},{"location":"HOWTOS/#reduce-necessary-application-conf-configurations-within-the-application-repository","title":"Reduce necessary application-conf configurations within the application repository","text":"<p>The 3 properties for loading configuration files to configure the build framework</p> <p>zAppBuild proposes 3 properties called <code>buildPropFiles</code>, <code>applicationDefaultPropFiles</code> and <code>applicationPropFiles</code>, each referencing a list of properties files that contain important parameters to configure the build process. The referenced properties files are loaded in the below order of precedence: </p> <ol> <li><code>buildPropFiles</code>, managed in build-conf/build.properties, references properties files in the build-conf directory for core zAppBuild settings for the language scripts such as system datasets, naming conventions of build datasets, dataset characteristics and various core properties of the build framework, like the reporting features.</li> <li><code>applicationDefaultPropFiles</code>, managed in build-conf/build.properties as well, allows the user to define default application-related (and \"language script\"-related) properties, that are centrally managed and shared across applications.</li> <li><code>applicationPropFiles</code> is referencing properties files providing application-level settings. This property is managed in the applications' <code>application-conf/application.properties</code> file which is by default located in the applications' application-conf folder. These settings define compiler and link options, deploy types, script mappings and search path configurations for the DBB dependency and impact analysis. A sample is provided in application-conf. The location where zAppBuild searches for the <code>application.properties</code> file is defined via the <code>applicationConfDir</code> setting that is managed in build-conf/build.properties. The default location mandates an <code>application-conf</code> folder including the <code>application.properties</code> file to be present in the applications' git repository.</li> </ol> <p>The <code>buildPropFiles</code> and <code>applicationDefaultPropFiles</code> settings define enterprise-level, centrally-controlled properties, that are used by all applications using the build framework. They are shared across all applications.</p> <p>Historically, a lot of application-level properties are configured and provided via the <code>applicationPropFiles</code> within the <code>application-conf</code> directory. However, users have reported that zAppBuild is exposing far too many properties to the application team, which also makes it hard to control the update process for new or modified properties. For example, most customers prefer to manage compiler and binder options in the centrally-controlled settings.</p> <p>This how-to outlines the changes to centrally manage default application settings.</p> <p>Centrally defining application-related properties </p> <p>Return codes, deploy types, script mappings or search path configurations for the DBB dependency and impact analysis can be centrally configured especially when application teams follow the similar repository layout and have similar application architectures. It is desireable to avoid having multiple copies of files with the same definitions spread across multiple locations.</p> <p>Loading common properties files via the <code>applicationDefaultPropFiles</code> setting helps to achieve this easily. For instance, the below configuration of <code>applicationDefaultPropFiles</code> is loading properties that define the search path configurations, script mappings, and various language settings (such as compiler or linker options) that can be applied to all applications using zAppBuild.</p> <p><pre><code>..\n# Extended list of applicationDefaultPropFiles to include\n# default application settings for language scripts\napplicationDefaultPropFiles=defaultzAppBuildConf.properties,\\\ndefault-application-conf/searchPaths.properties,\\\ndefault-application-conf/scriptMappings.properties,\\\ndefault-application-conf/Cobol.properties,\\\ndefault-application-conf/BMS.properties,\\\ndefault-application-conf/PLI.properties,\\\ndefault-application-conf/Transfer.properties,\\\ndefault-application-conf/LinkEdit.properties,\\\ndefault-application-conf/ZunitConfig.properties\n..\n</code></pre> This allows to reduce the necessary definitions within the <code>application-conf</code> directory of the application repository. This <code>application-conf</code> directory now only contains the <code>application.properties</code> and <code>file.properties</code> files to define the application-specific settings and exceptions, such as file properties for particular build files:</p> <p><pre><code># Reduced list of applicationPropFiles\napplicationPropFiles=file.properties\n</code></pre> Potentially, you could go farther and merge the properties defined in <code>file.properties</code> into the <code>application.properties</code> file.</p> <p>If an application doesn't need to specify any application-specific settings, there is no need to create an <code>application.properties</code> file and zAppBuild will execute the build, even without finding the <code>application.properties</code> file expected at the <code>applicationConfDir</code> location.</p> <p>Please note that moving property files to the central build framework implementation disables the capability to perform impactBuilds on a property change for these properties - see <code>impactBuildOnBuildPropertyChanges</code> setting at default.</p>"},{"location":"REPORTS/","title":"Reporting capabilities within zAppBuild","text":"<p>zAppBuild provides a set of reporting capabilities, which are part of the build framework itself to address some common demands of mainframe development teams.</p> <p>Developers are particularly interested if:</p> <ul> <li>A change of an element impacts other application components which are managed in a different repository.</li> <li>Their changes on an isolated feature branch potentially cause a conflict with some concurrent development done by others within the same repository.</li> </ul> <p>During the analysis phase, while a developer might leverage tools for application understanding such as IBM Application Discovery, it is also beneficial to enable the build framework to automatically generate reports to answer the above questions.</p> <p>By default these reporting capabilities are turned off since it is normally not part of the standard build framework workflow.</p>"},{"location":"REPORTS/#report-external-impacts","title":"Report External Impacts","text":""},{"location":"REPORTS/#purpose","title":"Purpose","text":"<p>The Reporting External Impacts feature enables the build framework to generate reports about impacted files in other application contexts to document cross application impacts for files that were changed within your application scope.</p> <p>The reports is meant to be used to start the collaboration process with the other application teams about their adoption process of the shared resource, typically a copybook. A future idea is to use the reports to add files to the build list so that the consuming application can built their impacted files.</p>"},{"location":"REPORTS/#functional-overview","title":"Functional Overview","text":"<p>Technically, this feature analyzes the files of the calculated and provided build list including the identified changed files of the current pipeline execution. Based on this list, the feature queries the collections of other applications within the DBB WebApp. To fully analyze cross application impacts, other applications must also be part of and be processed through the CI/CD pipeline with DBB.</p> <p>This feature is available on all build types leveraging a DBB repository client connection, such as <code>--impactBuild</code>, <code>--mergeBuild</code> or <code>--fullBuild</code>. With the latest updates, it requires both DBB toolkit version and DBB Webapp versions to be on at least on 1.1.3.</p> <p>It can operate in two modes: Simple and Deep.</p> <p>Simple mode allows the identification and report of directly-impacted files. Supported scenarios include the following:</p> <ul> <li>Sample Scenario 1 - Copybook COPYA in application App-A is referenced by programs in applications App-B and App-C. If copybook COPYA is changed, the reporting of external impacts will document the impacted programs of App-B and App-C.</li> <li>Sample Scenario 2 - A submodule SUBPGMA in application App-A is included as an object deck in multiple other applications through processing a linkcard (static linkage). If SUBPGMA is changed, then the reporting of external impacts will document the programs of the other impacted applications. In this case, the submodule SUBPGMA can even be an impacted file of a copybook change in App-A.</li> </ul> <p>Deep mode performs the simple analysis first, and then passes its results back into the analysis process to further find files that are impacted by the already-identified impacted files.</p> <ul> <li>Sample Scenario 1 - A changed copybook COPYA in application App-A is referenced by submodules in applications App-B and App-C. The deep reporting will first identify the impacted submodules in App-B and App-C, and then use those results in its extended analysis to identify the impacted linkcards used to create the binaries in App-B and App-C.</li> </ul>"},{"location":"REPORTS/#configuration","title":"Configuration","text":"<p>You can configure the feature through application-conf/reports.properties. Please check out the description of the properties in README.md</p> <p>Use the build property in property file to activate the feature and further configure it like defining a filter to run the analysis only for a subset of files in your repository see <code>reportExternalImpactsAnalysisFileFilter</code> and to limit the scope of the external collections (see <code>reportExternalImpactsCollectionPatterns</code>), which should be queried.</p>"},{"location":"REPORTS/#sample-invocation","title":"Sample invocation","text":"<p>In the below sample, the MortgageApplication was split into two applications App-EPSC and App-EPSM to demonstrate the feature from a user perspective:</p> <p>App-EPSM provides a shared copybook <code>epsmtcom.cpy</code>, which is included in programs of App-EPSC. While the overall build strategy does not intend to force an automated rebuild in App-EPSC for the changed shared artifact, however would like the capability to provide a report to the application team, which owns this shared element.</p> <p>The build console output for App-EPSM will contain the below section (with <code>--verbose</code> option):</p> <pre><code>...\n** Writing build list file to /u/jenkins/workspace/App-EPSM/build.20220810.122244.022/buildList.txt\nApp-EPSM/cobol/epsplist.cbl\n** Perform analysis and reporting of external impacted files for the build list including changed files.\n*** Running external impact analysis with file filter **/* and collection patterns .*-main.*,.*-develop.* with analysis mode simple\n*** Running external impact analysis for files \n     App-EPSM/copybooks-public/epsmtcom.cpy \n     App-EPSM/cobol/epsplist.cbl \n*** Potential external impact found EPSCSMRT (App-EPSC/cobol/epscsmrt.cbl) in collection App-EPSC-main \n*** Potential external impact found EPSMLIST (App-EPSC/cobol/epsmlist.cbl) in collection App-EPSC-main \n*** Potential external impact found EPSCMORT (App-EPSC/cobol/epscmort.cbl) in collection App-EPSC-main \n*** Writing report of external impacts to file /u/jenkins/workspace/App-EPSM/build.20220810.122244.022/externalImpacts_App-EPSC-main.txt\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n...\n</code></pre> <p>For each collection in scope of the analysis with impacted files a report is generated and written (in this case <code>externalImpacts_App-EPSC-main.txt</code>) to the <code>workdir</code>. A report will contain three columns (logicalFile, filePath and collectionName) with the external impacted files: </p> <pre><code>EPSCMORT   App-EPSC/cobol/epscmort.cbl   App-EPSC-main\nEPSCSMRT   App-EPSC/cobol/epscsmrt.cbl   App-EPSC-main\nEPSMLIST   App-EPSC/cobol/epsmlist.cbl   App-EPSC-main\n</code></pre> <p>With the extended analysis turned on, the same scenario looks as below and supports a static linkage dependency chain in application App-EPSC.</p> <pre><code>...\n** Writing build list file to /u/jenkins/workspace/App-EPSM/build.20220810.122845.028/buildList.txt\nApp-EPSM/cobol/epsplist.cbl\n** Perform analysis and reporting of external impacted files for the build list including changed files.\n*** Running external impact analysis with file filter **/* and collection patterns .*-main.*,.*-develop.* with analysis mode deep\n*** Running external impact analysis for files \n     App-EPSM/copybooks-public/epsmtcom.cpy \n     App-EPSM/cobol/epsplist.cbl \n*** Potential external impact found EPSCSMRT (App-EPSC/cobol/epscsmrt.cbl) in collection App-EPSC-main \n*** Potential external impact found EPSMLIST (App-EPSC/cobol/epsmlist.cbl) in collection App-EPSC-main \n*** Potential external impact found EPSCMORT (App-EPSC/cobol/epscmort.cbl) in collection App-EPSC-main \n**** Running external impact analysis for identified external impacted files as dependent files of the initial set. \n     App-EPSC/cobol/epsmlist.cbl \n     App-EPSC/cobol/epscsmrt.cbl \n     App-EPSC/cobol/epscmort.cbl \n**** Potential external impact found EPSMLIST (App-EPSC/link/epsmlist.lnk) in collection App-EPSC-main-outputs \n*** Writing report of external impacts to file /u/jenkins/workspace/App-EPSM/build.20220810.122845.028/externalImpacts_App-EPSC-main-outputs.txt\n*** Writing report of external impacts to file /u/jenkins/workspace/App-EPSM/build.20220810.122845.028/externalImpacts_App-EPSC-main.txt\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n...\n</code></pre> <p>Important considerations / notes</p> <ul> <li>This functionality works on the assumption, that files names are unique. If the assumption is met, the results will be accurate; if not, false positives being identified. </li> <li>It does not perform any type of dependency resolution against search path configurations.</li> <li>In most cases it is sufficient to run with the simple mode.</li> <li>Use the pattern configuration to limit the query to those collections which are relevant and avoid unnecessary processing. Long-living branches such as main and development are sufficient to ran against the reporting. </li> <li>Use the file filter, if you can group files to be shared between applications.</li> </ul>"},{"location":"REPORTS/#report-concurrent-changes","title":"Report concurrent changes","text":""},{"location":"REPORTS/#purpose_1","title":"Purpose","text":"<p>Concurrent development activities in separated isolated branches on the same source code, lead to the need to merge the code at some point in time. Git does an excellent job for this task and supports the developer for this task. While pessimistic locking is a common practise on the mainframe, developers will need to keep an eye on what is happening in the git repository, which follows the optimistic locking approach.</p> <p>The Report concurrent changes feature can be activated to generate a report to document changes in other configurations within the repository. Additionally, it validates if the current build list intersects with those changes.</p>"},{"location":"REPORTS/#functionality","title":"Functionality","text":"<p>This feature compares the current configuration to several other configurations via a <code>git diff</code>. It runs a git diff between current and the configured concurrent branches (<code>reportConcurrentChangesGitBranchReferencePatterns</code> - a list of regex patterns) to capture ongoing activities in concurrent configurations, which are not applied to the current configuration which is built. A report file within the build output directory is produced to document the changes and potential conflicts.</p> <p>Additionally to the reporting, it verifies if the list of the current build files intersect with the identified changes of the concurrent branches. If the lists intersect, an additional notification is reported in the build log and the build result. Depending on the configuration, it can make the build be marked as failed and force the development team to integrate changes and rebase the code before they move on.  </p>"},{"location":"REPORTS/#pre-requisites","title":"Pre-requisites","text":"<p>The feature relies on git functionality. Therefore it is only available in incremental pipeline builds for the build types <code>--impactBuild</code> and <code>--mergeBuild</code> and not for user build or full build scenarios.</p> <p>It requires that the cloned repository in the build workspace contains the git references (git-refs) to function. Please verify this in a test environment first, while not all pipeline orchestrators fetch the git references by default and might require additional configuration of the fetch process. </p>"},{"location":"REPORTS/#configuration_1","title":"Configuration","text":"<p>Please review the build properties defined in application-conf/reports.properties to configure the reporting of concurrent changes. </p> <p>You can specify a list of regex patterns for those git references (branches) which should be considered in the analysis of potential conflicts. It also takes fully qualified names. Please note, that the implementation performs a <code>git branch -r</code> to dynamically obtain other branches based on the applicationSrcDirs . Limitation: It does not support the analysis across multiple git repositories configured in the build scope!</p> <p>In the below sample configuration for <code>reportConcurrentChangesGitBranchReferencePatterns</code>, the analysis will run for the configured mainBuildBranch, all branches containing the word <code>main</code>, the branches <code>develop</code> and <code>release</code>, and all branches starting with <code>feature</code>.</p> <pre><code>reportConcurrentChangesGitBranchReferencePatterns=${mainBuildBranch},.*main.*,develop,release,feature.*\n</code></pre> <p>The results of the analysis are written to a file called `report_concurrentChanges.txt' within the build workspace within the build out directory.   </p>"},{"location":"REPORTS/#sample-invocation_1","title":"Sample invocation","text":"<p>To document the functionality of the feature, the source code <code>MortgageApplication/cobol/epscmort.cbl</code> was changed on the main branch after the feature branch was forked to simulate concurrent development activities. </p> <p>On the feature branch <code>feature-1122</code>, the communication copybook <code>MortgageApplication/copybook/epsmtcom.cpy</code> was changed. During the impactBuild the the below build list is itendified: </p> <p><pre><code>MortgageApplication/cobol/epsmlist.cbl\nMortgageApplication/cobol/epscsmrt.cbl\nMortgageApplication/cobol/epscmort.cbl\nMortgageApplication/link/epsmlist.lnk \n</code></pre> While the above build list intersects with the change on the branch main and the setting <code>reportConcurrentChangesIntersectionFailsBuild=true</code> is activated, a warning is written to the build console output and the build state is flagged as Error: <pre><code>** Build start at 20211221.110944.009\n** Repository client created for https://10.3.20.96:10443/dbb\n** Build output located at /u/ibmuser/outDir/mortgageout/build.20211221.110944.009\n** Build result created for BuildGroup:MortgageApplication-feature-1122 BuildLabel:build.20211221.110944.009 at https://10.3.20.96:10443/dbb/rest/buildResult/62001\n** --impactBuild option selected. Building impacted programs for application MortgageApplication\n*!! MortgageApplication/cobol/epscmort.cbl is changed on branch main and intersects with the current build list.\n** Writing build list file to /u/ibmuser/outDir/mortgageout/build.20211221.110944.009/buildList.txt\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n*** Building file MortgageApplication/cobol/epscsmrt.cbl\n*** Building file MortgageApplication/cobol/epscmort.cbl\n** Building files mapped to LinkEdit.groovy script\n*** Building file MortgageApplication/link/epsmlist.lnk\n** Writing build report data to /u/ibmuser/outDir/mortgageout/build.20211221.110944.009/BuildReport.json\n** Writing build report to /u/ibmuser/outDir/mortgageout/build.20211221.110944.009/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-feature-1122 BuildLabel:build.20211221.110944.009 at https://10.3.20.96:10443/dbb/rest/buildResult/62001\n** Build ended at Tue Dec 21 23:09:56 GMT+01:00 2021\n** Build State : ERROR\n** Total files processed : 4\n** Total build time  : 11.836 seconds\n\n** Build finished\n</code></pre> Contents of the report_concurrentChanges.txt file look like: <pre><code>===============================================\n** Report for configuration: main\n========\n** Changed Files\n* MortgageApplication/cobol/epscmort.cbl is changed and intersects with the current build list.                       \n</code></pre></p> <p>In a mergeBuild scenario, where the build list does not intersect with the changes on the concurrent branch, the build passes as expected. The report for concurrent development activities is written to the build output directory.</p> <p><pre><code>** Build start at 20211221.111003.010\n** Repository client created for https://10.3.20.96:10443/dbb\n** Build output located at /u/ibmuser/outDir/mortgageout/build.20211221.111003.010\n** Build result created for BuildGroup:MortgageApplication-feature-1122 BuildLabel:build.20211221.111003.010 at https://10.3.20.96:10443/dbb/rest/buildResult/62013\n** --mergeBuild option selected. Building changed programs for application MortgageApplication flowing back to main\n** Writing build list file to /u/ibmuser/outDir/mortgageout/build.20211221.111003.010/buildList.txt\n** Invoking build scripts according to build order: BMS.groovy,Cobol.groovy,LinkEdit.groovy\n** Building files mapped to Cobol.groovy script\n*** Building file MortgageApplication/cobol/epsmlist.cbl\n** Writing build report data to /u/ibmuser/outDir/mortgageout/build.20211221.111003.010/BuildReport.json\n** Writing build report to /u/ibmuser/outDir/mortgageout/build.20211221.111003.010/BuildReport.html\n** Updating build result BuildGroup:MortgageApplication-feature-1122 BuildLabel:build.20211221.111003.010 at https://10.3.20.96:10443/dbb/rest/buildResult/62013\n** Build ended at Tue Dec 21 23:10:09 GMT+01:00 2021\n** Build State : CLEAN\n** Total files processed : 1\n** Total build time  : 5.158 seconds\n\n** Build finished\n</code></pre> Contents of the reported report_concurrentChanges_main.txt file look like: <pre><code>===============================================\n** Report for configuration: main\n========\n** Changed Files\n  MortgageApplication/cobol/epscmort.cbl\n</code></pre></p>"},{"location":"application-conf-README/","title":"Application Configuration","text":"<p>This folder contains application specific configuration properties used by the zAppBuild Groovy build and utility scripts. It is intended to be copied as a high level folder in the application repository or main application repository if the application source files are distributed across multiple repositories. Once copied to the application repository, users should review the default property files and modify any values as needed.</p> <p>At the beginning of the build, the <code>application.properties</code> file will automatically be searched and loaded if it exists into the DBB BuildProperties class. The <code>application.properties</code> file is by default searched in the <code>application-conf</code> folder of the application, but this can be configured through the <code>applicationConfDir</code> property in build-conf/build.properties. Use the <code>applicationPropFiles</code> property (see table below) to load additional application property files.</p> <p>Properties can be overwritten on a per file basis through DBB Build Properties file properties. The tables below indicate which properties keys can be overwritten. It is recommended to manage these overwrites in <code>file.properties</code>.</p>"},{"location":"application-conf-README/#property-file-descriptions","title":"Property File Descriptions","text":"<p>Since all properties will be loaded into a single static instance of BuildProperties, the organization and naming convention of the property files are somewhat arbitrary and targeted more for self documentation and understanding. Properties related to a language script are prefixed with the name of the language script (i.e <code>cobol_compileParms</code>).</p>"},{"location":"application-conf-README/#applicationproperties","title":"application.properties","text":"<p>This property file is loaded automatically at the beginning of the build and contains application specific properties used mainly by <code>build.groovy</code> but can also be a place to declare properties used by multiple language scripts. Additional property files are loaded based on the content of the <code>applicationPropFiles</code> property.</p> Property Description Overridable runzTests Boolean value to specify if zUnit tests should be run.  Defaults to <code>false</code>, to enable zUnit Tests, set value to <code>true</code>. false applicationPropFiles Comma separated list of additional application property files to load. Supports both absolute and relative file paths.  Relative paths assumed to be relative to ${workspace}/${application}/application-conf/. false applicationSrcDirs Comma separated list of all source directories included in application build. Each directory is assumed to be a local Git repository clone. Supports both absolute and relative paths though for maximum reuse of collected dependency data relative paths should be used.  Relative paths assumed to be relative to ${workspace}. false buildOrder Comma separated list of the build script processing order. false formatConsoleOutput \u00a0Flag to log output in table views instead of printing raw JSON data false mainBuildBranch The main build branch of the main application repository.  Used for cloning collections for topic branch builds instead of rescanning the entire application. false gitRepositoryURL \u00a0git repository URL of the application repository to establish links to the changed files in the build result properties false excludeFileList Files to exclude when scanning or running full build. false skipImpactCalculationList Files for which the impact analysis should be skipped in impact build false jobCard JOBCARD for JCL execs false Build Property management loadFileLevelProperties Flag to enable the zAppBuild capability to load individual artifact properties files for a build file true loadLanguageConfigurationProperties Flag to enable the zAppBuild capability to load language configuration properties for build files mapped in languageConfigurationMapping.properties true propertyFilePath relative path to folder containing individual artifact properties files true propertyFileExtension file extension for individual artifact properties files true Dependency and Impact resolution configuration resolveSubsystems boolean flag to configure the SearchPathDependencyResolver to evaluate if resolved dependencies impact the file flags isCICS, isSQL, isDLI, isMQ when creating the LogicalFile false impactResolutionRules Comma separated list of resolution rule properties used for impact builds.  Sample resolution rule properties (in JSON format) are included below. ** deprecated ** Please consider moving to new SearchPathDepedencyAPI leveraging <code>impactSearch</code> configuration. true, recommended in file.properties impactSearch \u00a0Impact finder resolution search configuration leveraging the SearchPathImpactFinder API. Sample configurations are inlcuded below, next to the previous rule definitions. true"},{"location":"application-conf-README/#fileproperties","title":"file.properties","text":"<p>Location of file properties, script mappings and file-level property overrides. All file properties for the entire application, including source files in distributed repositories of the application need to be contained either in this file or in other property files in the <code>application-conf</code> directory. Look for the column 'Overridable' in the tables below for build properties that can have file-level property overrides. Additional file-level properties can be defined through individual artifact properties files in a separate directory of the repository. For more details, see File Property Management.</p> Property Description dbb.scriptMapping DBB configuration file properties association build files to language scripts dbb.scannerMapping zAppBuild configuration override/expansion to map files extensions to DBB dependency scanner configurations isSQL File property overwrite to indicate that a file requires to include SQL parameters isCICS File property overwrite to indicate that a file requires to include CICS parameters isMQ File property overwrite to indicate that a file requires to include MQ parameters isDLI File property overwrite to indicate that a file requires to include DLI parameters cobol_testcase File property to indicate a generated zUnit cobol test case to use a different set of source and output libraries"},{"location":"application-conf-README/#reportsproperties","title":"reports.properties","text":"<p>Properties used by the build framework to generate reports. Sample properties file to all application-conf to overwrite central build-conf configuration.</p> Property Description reportExternalImpacts Flag to indicate if an impactBuild should analyze and report external impacted files in other collections reportExternalImpactsAnalysisDepths Configuration of the analysis depths when performing impact analysis for external impacts (simple reportExternalImpactsAnalysisFileFilter Comma-separated list of pathMatcher filters to limit the analysis of external impacts to a subset of the changed files reportExternalImpactsCollectionPatterns Comma-separated list of regex patterns of DBB collection names for which external impacts should be documented reportConcurrentChanges Flag to indicate if the build generates reports of concurrent changes to understand recent changes in concurrent configurations (branches) reportConcurrentChangesGitBranchReferencePatterns Comma-seperated list of regex patterns defining the branches for which concurrent changes should be calculated reportConcurrentChangesIntersectionFailsBuild Flag to indicated if the build is marked as error, when build list intersects with changes on concurrent configurations"},{"location":"application-conf-README/#assemblerproperties","title":"Assembler.properties","text":"<p>Application properties used by zAppBuild/language/Assembler.groovy</p> Property Description Overridable assembler_fileBuildRank Default Assemble program build rank. Used to sort Assembler build file sub-list. Leave empty. true assembler_pgmParms Default Assembler parameters. true assembler_linkEditParms Default parameters for the link edit step. true assembler_debugParms Assembler options when the debug flag is set. true assembler_compileErrorPrefixParms Default parameters to support remote error feedback in user build scenarios \u00a0true assembler_eqalangxParms Default parameters for eqalangx utility to produce debug sidefile. true assembler_db2precompilerParms Default Assembler parameters for Db2 precompiler step. true assembler_cicsprecompilerParms \u00a0Default Assembler parameters for CICS precompiler step. true assembler_asmaOptFile \u00a0Optional ASMAOPT file - dataset(member). true assembler_linkEdit Flag indicating to execute the link edit step to produce a load module for the source file.  If false then a object deck will be created instead for later linking. true assembler_linkEditStream Optional linkEditStream defining additional link instructions via SYSIN dd \u00a0true assembler_maxSQLTranslatorRC Default maximum return code for the sql translator step. true assembler_maxCICSTranslatorRC Default maximum return code for the cics translator step. true assembler_maxRC Default maximum return code for the Assembler step. true assembler_maxIDILANGX_RC Default maximum return code for the debug IDILANGX sidefile generation step. true assembler_linkEditMaxRC Default maximum return code for the linkEdit step. true assembler_impactPropertyList List of build properties causing programs to rebuild when changed false assembler_impactPropertyListCICS List of CICS build properties causing programs to rebuild when changed false assembler_impactPropertyListSQL List of SQL build properties causing programs to rebuild when changed false assembler_dependencySearch Assembler dependencySearch configuration to configure the SearchPathDependencyResolver. Format is a concatenated string of searchPath configurations. Strings representing the SearchPaths defined in <code>application-conf/application.properties</code>. true assembler_storeSSI Flag to store abbrev git hash in ssi field in link step true assembler_deployType default deployType for build output true assembler_deployTypeCICS deployType for build output for build files where isCICS=true true assembler_deployTypeDLI deployType for build output for build files with isDLI=true true assembler_scanLoadModule Flag indicating to scan the load module for link dependencies and store in the application's outputs collection. true assembler_assemblySyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during assembly step true assembler_linkEditSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during linkEdit step true"},{"location":"application-conf-README/#bmsproperties","title":"BMS.properties","text":"<p>Application properties used by zAppBuild/language/BMS.groovy</p> Property Description Overridable bms_fileBuildRank Default BMS program build rank. Used to sort BMS build file sub-list. Leave empty. true bms_maxRC Default BMS maximum RC allowed. true bms_copyGenParms Default parameters for the copybook generation step. true bms_compileParms Default parameters for the compilation step. true bms_linkEditParms Default parameters for the link edit step. true bms_impactPropertyList List of build properties causing programs to rebuild when changed false bms_storeSSI Flag to store abbrev git hash in ssi field in link step true bms_deployType deployType for build output true bms_copy_deployType deployType for generated copybooks true"},{"location":"application-conf-README/#cobolproperties","title":"Cobol.properties","text":"<p>Application properties used by zAppBuild/language/Cobol.groovy</p> Property Description Overridable cobol_fileBuildRank Default Cobol program build rank. Used to sort Cobol build file sub-list. Leave empty. true cobol_dependencySearch Cobol dependencySearch configuration to configure the SearchPathDependencyResolver. Format is a concatenated string of searchPath configurations. Strings representing the SearchPaths defined in <code>application-conf/application.properties</code>. true cobol_compilerVersion Default Cobol compiler version. true cobol_compileMaxRC Default compile maximum RC allowed. true cobol_linkEditMaxRC Default link edit maximum RC allowed. true cobol_compileParms Default base compile parameters. true cobol_compileCICSParms Default CICS compile parameters. Appended to base parameters if has value. true cobol_compileSQLParms Default SQL compile parameters. Appended to base parameters if has value. true cobol_compileErrorPrefixParms IDz user build parameters. Appended to base parameters if has value. true cobol_linkEditParms Default link edit parameters. true cobol_compileDebugParms Default Debug compile parameters. Appended to base parameters if running with debug flag set. true cobol_storeSSI Flag to store abbrev git hash in ssi field in link step true cobol_impactPropertyList List of build properties causing programs to rebuild when changed false cobol_impactPropertyListCICS List of CICS build properties causing programs to rebuild when changed false cobol_impactPropertyListSQL List of SQL build properties causing programs to rebuild when changed false cobol_linkEdit Flag indicating to execute the link edit step to produce a load module for the source file.  If false then a object deck will be created instead for later linking. true cobol_linkEditStream Optional linkEditStream defining additional link instructions via SYSIN dd \u00a0true cobol_linkDebugExit \u00a0linkEditStream to append a debug exit via SYSIN dd \u00a0true cobol_deployType default deployType for build output true cobol_deployTypeCICS deployType for build output for build files where isCICS=true true cobol_deployTypeDLI deployType for build output for build files with isDLI=true true cobol_scanLoadModule Flag indicating to scan the load module for link dependencies and store in the application's outputs collection. true cobol_compileSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during compile step true cobol_linkEditSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during linkEdit step true"},{"location":"application-conf-README/#linkeditproperties","title":"LinkEdit.properties","text":"<p>Application properties used by zAppBuild/language/LinkEdit.groovy</p> Property Description Overridable linkedit_fileBuildRank Default link card build rank. Used to sort link card build sub-list. Leave empty. true linkedit_maxRC Default link edit maximum RC allowed. true linkedit_parms Default link edit parameters. true linkedit_impactPropertyList List of build properties causing programs to rebuild when changed false linkedit_storeSSI Flag to store abbrev git hash in ssi field in link step true linkedit_deployType default deployType for build output true linkedit_deployTypeCICS deployType for build output for build files where isCICS=true set as file property true linkedit_deployTypeDLI deployType for build output for build files with isDLI=true set as file property true linkedit_scanLoadModule Flag indicating to scan the load module for link dependencies and store in the application's outputs collection. true linkEdit_linkEditSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during linkEdit step true"},{"location":"application-conf-README/#pliproperties","title":"PLI.properties","text":"<p>Application properties used by zAppBuild/language/LinkEdit.groovy</p> Property Description Overridable pli_fileBuildRank Default PLI program build rank. Used to sort PLI program sub-list. Leave empty. true pli_dependencySearch PLI dependencySearch configuration to configure the SearchPathDependencyResolver. Format is a concatenated string of searchPath configurations. Strings representing the SearchPaths defined in <code>application-conf/application.properties</code>. true pli_compilerVersion Default PLI compiler version. true pli_compileMaxRC Default compile maximum RC allowed. true pli_linkEditMaxRC Default link edit maximum RC allowed. true pli_compileParms Default base compile parameters. true pli_compileCICSParms Default CICS compile parameters. Appended to base parameters if has value. true pli_compileSQLParms Default SQL compile parameters. Appended to base parameters if has value. true pli_compileDebugParms Default Debug compile parameters. Appended to base parameters if running with debug flag set. true pli_compileErrorPrefixParms IDz user build parameters. Appended to base parameters if has value. true pli_impactPropertyList List of build properties causing programs to rebuild when changed false pli_impactPropertyListCICS List of CICS build properties causing programs to rebuild when changed false pli_impactPropertyListSQL List of SQL build properties causing programs to rebuild when changed false pli_linkEditParms Default link edit parameters. true pli_linkEditStream Optional linkEditStream defining additional link instructions via SYSIN dd \u00a0true pli_linkDebugExit \u00a0linkEditStream to append a debug exit via SYSIN dd \u00a0true pli_storeSSI Flag to store abbrev git hash in ssi field in link step true pli_impactPropertyList List of build properties causing programs to rebuild when changed false pli_impactPropertyListCICS List of CICS build properties causing programs to rebuild when changed false pli_impactPropertyListSQL List of SQL build properties causing programs to rebuild when changed false pli_linkEdit Flag indicating to execute the link edit step to produce a load module for the source file.  If false then a object deck will be created instead for later linking. true pli_deployType default deployType for build output true pli_deployTypeCICS deployType for build output for build files where isCICS=true true pli_deployTypeDLI deployType for build output for build files with isDLI=true true pli_scanLoadModule Flag indicating to scan the load module for link dependencies and store in the application's outputs collection. true pli_compileSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during compile step true pli_linkEditSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during linkEdit step true"},{"location":"application-conf-README/#bindproperties","title":"bind.properties","text":"<p>Application properties used by zAppBuild/language/COBOL.groovy</p> Property Description Overridable bind_performBindPackage Default variable to perform DB2 bind as part of a DBB User Build (default value:false) true bind_runIspfConfDir bind_db2Location The name of the DB2 subsystem true bind_collectionID The DB2 collection (Package) name true bind_packageOwner The owner of the package, if left empty the use executing the command will be used true bind_qualifier The value of the implicit qualifier true bind_maxRC Default bind maximum RC allowed. true"},{"location":"application-conf-README/#mfsproperties","title":"MFS.properties","text":"<p>Application properties used by zAppBuild/language/MFS.groovy</p> Property Description Overridable mfs_fileBuildRank Default MFS program build rank. Used to sort MFS build file sub-list. Leave empty. true mfs_phase1MaxRC Default MFS Phase 1 maximum RC allowed. true mfs_phase2MaxRC Default MFS Phase 2 maximum RC allowed. true mfs_phase1Parms Default parameters for the phase 1 step. true mfs_phase2Parms Default parameters for the phase 2 step. true mfs_impactPropertyList List of build properties causing programs to rebuild when changed false mfs_deployType default deployType for build output true"},{"location":"application-conf-README/#dbdgenproperties","title":"DBDgen.properties","text":"<p>Application properties used by zAppBuild/language/DBDgen.groovy</p> Property Description Overridable dbdgen_fileBuildRank Default build program build rank. Used to sort DBDgen build file sub-list. Leave empty. true dbdgen_pgmParms Default DBDgen parameters. true dbdgen_linkEditParms Default parameters for the link edit step. true dbdgen_compileErrorPrefixParms Default parameters to support remote error feedback in user build scenarios \u00a0true dbdgen_assemblerMaxRC Default link edit maximum RC allowed. true dbdgen_linkEditMaxRC Default link edit maximum RC allowed. true dbdgen_impactPropertyList List of build properties causing programs to rebuild when changed false dbdgen_deployType default deployType for build output true"},{"location":"application-conf-README/#psbgenproperties","title":"PSBgen.properties","text":"<p>Application properties used by zAppBuild/language/PSBgen.groovy</p> Property Description Overridable psbgen_fileBuildRank Default build program build rank. Used to sort DBDgen build file sub-list. Leave empty. true psbgen_pgmParms Default PSBgen parameters. true psbgen_linkEditParms Default parameters for the link edit step. true psbgen_compileErrorPrefixParms Default parameters to support remote error feedback in user build scenarios \u00a0true psbgen_runACBgen Parameter if ACBgen should be executed right after PSBgen (default: true) true psbgen_assemblerMaxRC Default link edit maximum RC allowed. true psbgen_linkEditMaxRC Default link edit maximum RC allowed. true psbgen_impactPropertyList List of build properties causing programs to rebuild when changed false psbgen_deployType default deployType for build output true"},{"location":"application-conf-README/#acbgenproperties","title":"ACBgen.properties","text":"<p>Application properties used by zAppBuild/language/PSBgen.groovy</p> Property Description Overridable acbgen_pgmParms Default ACBgen parameters. true acbgen_pgmMaxRC Default ACBgen maximum RC allowed. true acbgen_deployType default deployType for build output true"},{"location":"application-conf-README/#zunitconfigproperties","title":"ZunitConfig.properties","text":"<p>Application properties used by zAppBuild/language/ZunitConfig.groovy</p> Property Description Overridable zunit_maxPassRC Default zUnit maximum RC allowed for a Pass. true zunit_maxWarnRC Default zUnit maximum RC allowed for a Warninig (everything beyond this value will Fail). true zunit_playbackFileExtension Default zUnit Playback File Extension. true zunit_dependencySearch Default zUnit dependencySearch configuration to configure the SearchPathDependencyResolver. Format is a concatenated string of searchPath configurations. Strings representing the SearchPaths defined in <code>application-conf/application.properties</code>. \u00a0true zunit_bzuplayParms Default options passed to the zUnit runner BZUPLAY \u00a0true zunit_userDebugSessionTestParm Debug Tool Test parameter to initiate the debug session true zunit_CodeCoverageHost Headless Code Coverage Collector host (if not specified IDz will be used for reporting) true zunit_CodeCoveragePort Headless Code Coverage Collector port (if not specified IDz will be used for reporting) true zunit_CodeCoverageOptions Headless Code Coverage Collector Options true"},{"location":"application-conf-README/#crbproperties","title":"CRB.properties","text":"<p>Application properties used by zAppBuild/language/CRB.groovy</p> Property Description Overridable crb_maxRC CICS Resource Builder maximum acceptable return code (default is 4 if not specified) true"},{"location":"application-conf-README/#rexxproperties","title":"REXX.properties","text":"<p>Application properties used by zAppBuild/language/REXX.groovy</p> Property Description Overridable rexx_compileMaxRC Default compile maximum RC allowed. true rexx_linkEditMaxRC Default link edit maximum RC allowed. true rexx_dependencySearch Default REXX dependencySearch configuration to configure the SearchPathDependencyResolver. Format is a concatenated string of searchPath configurations. Strings representing the SearchPaths defined in <code>application-conf/application.properties</code>. \u00a0true rexx_compileParms Default base compile parameters. true rexx_compiler Default REXX compiler \u00a0true rexx_linkEdit Flag indicating to execute the link edit step to produce a compiled rexx for the source file. true rexx_linkEditParms Default link edit parameters. true rexx_deployType default deployType \u00a0true rexx_cexec_deployType default deployType CEXEC \u00a0true rexx_compileSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during compile step true rexx_linkEditSyslibConcatenation A comma-separated list of libraries to be concatenated in syslib during linkEdit step true"},{"location":"application-conf-README/#nonbuildableproperties","title":"nonBuildable.properties","text":"<p>Application properties used by zAppBuild/language/Transfer.groovy</p> Property Description Overridable transfer_deployType deployType \u00a0true"},{"location":"application-conf-README/#languageconfigurationmappingproperties","title":"languageConfigurationMapping.properties","text":"<p>Sample language configuration mapping properties used by dbb-zappbuild/utilities/BuildUtilities.groovy.</p> <p>This contains the mapping of the files and their corresponding Language Configuration properties files residing in <code>zAppBuild/build-conf/language-conf</code> to override the default file properties.</p> <p>Example: The entry - <code>epsnbrvl.cbl=languageConfigProps01</code>, means the file properties of file <code>epsnbrvl.cbl</code> will be overridden by the properties mentioned in <code>zAppBuild/build-conf/language-conf/languageConfigProps01.properties</code></p> <p>See the language configuration mapping documentation for more details on how to enable and use language configuration mapping.</p>"},{"location":"build-conf-README/","title":"Build Configuration","text":"<p>This folder contains general build configuration properties used by the zAppBuild Groovy build and utility scripts. They are separated from the application specific configuration properties contained in <code>samples/application-conf</code> which should be copied and modified in application repositories.</p> <p>NOTE : datasets.properties (described below) must be configured for your build machine!</p> <p>At the beginning of the build, the <code>build-conf/build.properties</code> file will automatically be loaded into the DBB BuildProperties class. Use the <code>buildPropFiles</code>  property (see table below) to load additional build property files.</p>"},{"location":"build-conf-README/#property-file-descriptions","title":"Property File Descriptions","text":"<p>Since all properties will be loaded into a single static instance of BuildProperties, the organization and naming convention of the property files are somewhat arbitrary and targeted more for self documentation and understanding.</p>"},{"location":"build-conf-README/#datasetsproperties","title":"datasets.properties","text":"<p>Build properties for Partition Data Sets (PDS) used by zAppBuild language build scripts. Must be configured for your build machine!</p> Property Description MACLIB z/OS macro library. Example: SYS1.MACLIB SCEEMAC Assembler macro library. Example: CEE.SCEEMAC SCEELKED LE (Language Environment) load library. Example: CEE.SCEELKED SASMMOD1 High Level Assembler (HLASM) load library. Example: ASM.SASMMOD1 SIGYCOMP_V4 Cobol Compiler Data Set for version 4.x.x. Example: COBOL.V4R1M0.SIGYCOMP SIGYCOMP_V6 Cobol Compiler Data Set for version 6.x.x. Example: IGY.V6R1M0.SIGYCOMP IBMZPLI_V52 PLI Compiler Data Set for version 5.2. Example: PLI.V5R2M0.SIBMZCMP IBMZPLI_V51 PLI Compiler Data Set for version 5.1. Example: PLI.V5R1M0.SIBMZCMP SDFHMAC CICS Macro Library. Example: CICSTS.V3R2M0.CICS.SDFHMAC SDFHLOAD CICS Load Library. Example: CICSTS.V3R2M0.CICS.SDFHLOAD SDFHCOB CICS COBOL Library. Example: CICSTS.V3R2M0.CICS.SDFHCOB SDFHPL1 CICS PL1 Library. Example: CICSTS.V3R2M0.CICS.SDFHPL1 SCSQCOBC MQ COBOL Library. Example: CSQ.V9R1M0.SCSQCOBC SCSQPLIC MQ PLI Library. Example: CSQ.V9R1M0.SCSQPLIC SCSQLOAD MQ Load Library. Example: CSQ.V9R1M0.SCSQLOAD SDSNLOAD DB2 Load Library. Example: DB2.V9R1M0.SDSNLOAD SFELLOAD Optional IDz Load Library. Example: FEL.V14R0M0.SFELLOAD SBZUSAMP Optional z/OS Dynamic Test Runner IDz zUnit / WAZI VTP library containing necessary copybooks. Example : FEL.V14R2.SBZUSAMP"},{"location":"build-conf-README/#buildproperties","title":"build.properties","text":"<p>General properties used mainly by <code>build.groovy</code> but can also be a place to declare properties used by multiple language scripts.</p> Property Description buildPropFiles Comma separated list of additional build property files to load. Supports both absolute and relative file paths.  Relative paths assumed to be relative to <code>zAppBuild/build-conf/</code>. applicationDefaultPropFiles \u00a0Comma separated list of default application configuration property files to load. Supports both absolute and relative file paths.  Relative paths assumed to be relative to <code>zAppBuild/build-conf/</code>. buildListFileExt File extension that indicates the build file is really a build list. applicationConfRootDir Alternate root directory for application-conf location.  Allows for the deployment of the application-conf directories to a static location.  Defaults to ${workspace}/${application} createBuildOutputSubfolder Option to create a subfolder with the build label within the build output dir (outDir). Default: true. buildOutputTSformat Defines the build timestamp format for build output subfolder and build label. requiredDBBToolkitVersion \u00a0Minimum required DBB ToolkitVersion to run this version of zAppBuild. requiredBuildProperties Comma separated list of required build properties for zAppBuild/build.groovy. Build and language scripts will validate that required build properties have been set before the script runs.  If any are missing or empty, then a validation error will be thrown. dbb.file.tagging Controls compile log and build report file tagging. Default: true. metadataStoreType DBB MetadataStore Type configuration property. Valid options are 'file' or 'db2'. Default: file metadataStoreFileLocation DBB File MetadataStore location. Default: $USER metadataStoreDb2Url DBB configuration property for Db2 URL.  Can be overridden by build.groovy option -url, \u2013url metadataStoreDb2ConnectionConf DBB configuration property for Db2 configuration properties file. dbb.gateway.type DBB configuration property to determine which gateway type is used for the build process dbb.gateway.procedureName \u00a0Interactive gateway Procedure Name dbb.gateway.accountNumber Interactive gateway Account Number dbb.gateway.groupId \u00a0Interactive gateway Group ID dbb.gateway.regionSize \u00a0Interactive gateway Region Size dbb.gateway.logLevel \u00a0Interactive gateway Log Level"},{"location":"build-conf-README/#defaultzappbuildconfproperties","title":"defaultzAppBuildConf.properties","text":"<p>General application properties used by zAppBuild.</p> Property Description dbb.scannerMapping DBB PropertyMapping specifying the scanner implementation to be used gitRepositoryCompareService Service URL for the Git provider to record a link to the git provider for a visual comparison of two hashes continueOnScanFailure Determine the behavior when facing a scanner failure. true (default) to continue scanning. false will terminate the process. formatConsoleOutput \u00a0Flag to log output in table views instead of printing raw JSON data on verbose output generateDb2BindInfoRecord Flag to control the generation of a generic DBB build record for a build file to document the configured db2 bind information (application-conf/bind.properties). Default: false ** Can be overridden by a file property. generateDb2BindInfoRecordProperties Comma-separated list of the bind parameters to be added to the DBB build record. impactBuildOnBuildPropertyChanges Boolean property to activate impact builds on changes of build properties within the application repository impactBuildOnBuildPropertyList List of build property lists referencing which language properties should cause an impact build when the given property is changed documentDeleteRecords Option determine if the build framework should document deletions of outputs in DBB Build Report. Default: false. dbb.LinkEditScanner.excludeFilter DBB configuration property used by the link edit scanner to exclude load module entries"},{"location":"build-conf-README/#dependencyreportproperties","title":"dependencyReport.properties","text":"<p>Properties used by the impact utilities to generate a report of external impacted files</p> Property Description reportExternalImpacts Flag to indicate if an impactBuild should analyze and report external impacted files in other collections Can be overridden by build.groovy option -re, \u2013reportExternalImpacts reportExternalImpactsAnalysisDepths Configuration of the analysis depths when performing impact analysis for external impacts (simple reportExternalImpactsAnalysisFileFilter Comma-separated list of pathMatcher filters to limit the analysis of external impacts to a subset of the changed files *** Can be overridden by application-conf *** reportExternalImpactsCollectionPatterns Comma-separated list of regex patterns of DBB collection names for which external impacts should be documented *** Can be overridden by application-conf ***"},{"location":"build-conf-README/#assemblerproperties","title":"Assembler.properties","text":"<p>Build properties used by zAppBuild/language/Assembler.groovy</p> Property Description assembler_requiredBuildProperties Comma separated list of required build properties for language/Assembler.groovy assembler_srcPDS Dataset to move assembler source files to from USS assembler_macroPDS Dataset to move macro files to from USS assembler_objPDS Dataset to create object decks in from Assembler step assembler_dbrmPDS Dataset to create DB2 DBRM modules in from Assembler step assembler_sysadataPDS Dataset to create  sysadata file that contains source and symbolic data about the program assembler_debugPDS Dataset to create the eqalangx side file for the IBM Debug Tool assembler_loadPDS Dataset to create load modules in from link edit step assembler_srcDataSets Comma separated list of 'source' type data sets assembler_srcOptions BPXWDYN creation options for creating 'source' type data sets assembler_loadDatasets Comma separated list of 'load module' type data sets assembler_loadOptions BPXWDYN creation options for 'load module' type data sets assembler_tempOptions BPXWDYN creation options for temporary data sets assembler_sysadataOptions \u00a0BPXWDYN creation options for assembler sysadata data sets assembler_sidefileOptions BPXWDYN creation options for eqalangx sidefile assembler_compileErrorFeedbackXmlOptions BPXWDYN creation options for SYSXMLSD data set assembler_outputDatasets List of output datasets to document deletions ** Can be overridden by a file property. assembler_pgm MVS program name of the high level assembler assembler_linkEditor MVS program name of the link editor assembler_dependenciesDatasetMapping DBB property mapping to map dependencies to different target datasets"},{"location":"build-conf-README/#bmsproperties","title":"BMS.properties","text":"<p>Build properties used by zAppBuild/language/BMS.groovy</p> Property Description bms_requiredBuildProperties Comma separated list of required build properties for language/BMS.groovy bms_srcPDS Dataset to move bms source files to from USS bms_copyPDS Dataset to create generated BMS copybooks in from copy gen step bms_loadPDS Dataset to create load modules in from link edit step bms_srcDataSets Comma separated list of 'source' type data sets bms_srcOptions BPXWDYN creation options for creating 'source' type data sets bms_loadDatasets Comma separated list of 'load module' type data sets bms_loadOptions BPXWDYN creation options for 'load module' type data sets bms_tempOptions BPXWDYN creation options for temporary data sets bms_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. bms_assembler MVS program name of the high level assembler bms_linkEditor MVS program name of the link editor"},{"location":"build-conf-README/#cobolproperties","title":"Cobol.properties","text":"<p>Build properties used by zAppBuild/language/Cobol.groovy</p> Property Description cobol_requiredBuildProperties Comma separated list of required build properties for language/Cobol.groovy cobol_srcPDS Dataset to move COBOL source files to from USS cobol_cpyPDS Dataset to move COBOL copybooks to from USS cobol_objPDS Dataset to create object decks in from compile step cobol_dbrmPDS Dataset to create DB2 DBRM modules in from compile step cobol_loadPDS Dataset to create load modules in from link edit step cobol_srcDataSets Comma separated list of 'source' type data sets cobol_srcOptions BPXWDYN creation options for creating 'source' type data sets cobol_loadDatasets Comma separated list of 'load module' type data sets cobol_loadOptions BPXWDYN creation options for 'load module' type data sets cobol_tempOptions BPXWDYN creation options for temporary data sets cobol_test_case_srcPDS Dataset to move COBOL test source files to from USS cobol_test_case_loadPDS Dataset to create load modules in from link edit step cobol_test_srcDatasets Comma separated list of test 'source' type data sets cobol_test_srcOptions BPXWDYN creation options for creating 'source' type data sets cobol_test_loadDatasets Comma separated list of test 'load module' type data sets cobol_test_loadOptions BPXWDYN creation options for creating 'load module' type data sets cobol_compileErrorFeedbackXmlOptions BPXWDYN creation options for SYSXMLSD data set cobol_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. cobol_compiler MVS program name of the COBOL compiler cobol_linkEditor MVS program name of the link editor cobol_dependenciesAlternativeLibraryNameMapping a map to define target dataset definition for alternate include libraries cobol_dependenciesDatasetMapping dbb property mapping to map dependencies to different target datasets"},{"location":"build-conf-README/#linkeditproperties","title":"LinkEdit.properties","text":"<p>Build properties used by zAppBuild/language/LinkEdit.groovy</p> Property Description linkedit_requiredBuildProperties Comma separated list of required build properties for language/Cobol.groovy linkedit_linkEditor MVS program name of the link editor linkedit_srcPDS Dataset to move COBOL source files to from USS linkedit_objPDS Dataset to create object decks in from compile step linkedit_loadPDS Dataset to create load modules in from link edit step linkedit_srcDataSets Comma separated list of 'source' type data sets linkedit_srcOptions BPXWDYN creation options for creating 'source' type data sets linkedit_loadDatasets Comma separated list of 'load module' type data sets linkedit_loadOptions BPXWDYN creation options for 'load module' type data sets linkedit_tempOptions BPXWDYN creation options for temporary data sets linkedit_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property."},{"location":"build-conf-README/#pliproperties","title":"PLI.properties","text":"<p>Build properties used by zAppBuild/language/PLI.groovy</p> Property Description pli_requiredBuildProperties Comma separated list of required build properties for language/Cobol.groovy pli_compiler MVS program name of the COBOL compiler pli_linkEditor MVS program name of the link editor pli_srcPDS Dataset to move PLI source files to from USS pli_incPDS Dataset to move PLI include files to from USS pli_objPDS Dataset to create object decks in from compile step pli_dbrmPDS Dataset to create DB2 DBRM modules in from compile step pli_loadPDS Dataset to create load modules in from link edit step pli_srcDataSets Comma separated list of 'source' type data sets pli_srcOptions BPXWDYN creation options for creating 'source' type data sets pli_loadDatasets Comma separated list of 'load module' type data sets pli_loadOptions BPXWDYN creation options for 'load module' type data sets pli_tempOptions BPXWDYN creation options for temporary data sets pli_test_case_srcPDS Dataset to move PLI test source files to from USS pli_test_case_loadPDS Dataset to create load modules in from link edit step pli_test_srcDatasets Comma separated list of test 'source' type data sets pli_test_srcOptions BPXWDYN creation options for creating 'source' type data sets pli_test_loadDatasets Comma separated list of test 'load module' type data sets pli_test_loadOptions BPXWDYN creation options for creating 'load module' type data sets pli_compileErrorFeedbackXmlOptions BPXWDYN creation options for SYSXMLSD data set pli_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. pli_listOptions BPXWDYN creation options for LIST data sets pli_dependenciesAlternativeLibraryNameMapping a map to define target dataset definition for alternate include libraries pli_dependenciesDatasetMapping dbb property mapping to map dependencies to different target datasets"},{"location":"build-conf-README/#mfsproperties","title":"MFS.properties","text":"<p>Build properties used by zAppBuild/language/MFS.groovy</p> Property Description mfs_requiredBuildProperties Comma separated list of required build properties for language/MFS.groovy mfs_srcPDS Dataset to move mfs source files to from USS mfs_tformatPDS Dataset to create format set from phase 2 step mfs_srcDatasets Comma separated list of 'source' type data sets mfs_srcOptions BPXWDYN creation options for creating 'source' type data sets mfs_loadDatasets Comma separated list of 'load module' type data sets mfs_loadOptions BPXWDYN creation options for 'load module' type data sets mfs_tempOptions BPXWDYN creation options for temporary data sets mfs_phase1processor MVS program name of MFSgen utility phase 1 mfs_phase2processor MVS program name of MFSgen utility phase 2 mfs_deployType deploy Type of format set"},{"location":"build-conf-README/#dbdgenproperties","title":"DBDgen.properties","text":"<p>Build properties used by zAppBuild/language/DBDgen.groovy</p> Property Description dbdgen_requiredBuildProperties Comma separated list of required build properties for language/DBDgen.groovy dbdgen_srcPDS Dataset to move assembler source files to from USS dbdgen_objPDS Dataset to create object decks in from Assembler step dbdgen_loadPDS Dataset to create load modules in from link edit step dbdgen_srcDatasets Comma separated list of 'source' type data sets dbdgen_srcOptions BPXWDYN creation options for creating 'source' type data sets dbdgen_loadDatasets Comma separated list of 'load module' type data sets dbdgen_loadOptions BPXWDYN creation options for 'load module' type data sets dbdgen_tempOptions BPXWDYN creation options for temporary data sets dbdgen_compileErrorFeedbackXmlOptions BPXWDYN creation options for SYSXMLSD data set dbdgen_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. dbdgen_pgm MVS program name of the high level assembler dbdgen_linkEditor MVS program name of the link editor dbdgen_deployType Deploy Type of build outputs"},{"location":"build-conf-README/#psbgenproperties","title":"PSBgen.properties","text":"<p>Build properties used by zAppBuild/language/PSBgen.groovy</p> Property Description psbgen_requiredBuildProperties Comma separated list of required build properties for language/PSBgen.groovy psbgen_srcPDS Dataset to move assembler source files to from USS psbgen_objPDS Dataset to create object decks in from Assembler step psbgen_loadPDS Dataset to create load modules in from link edit step psbgen_srcDatasets Comma separated list of 'source' type data sets psbgen_srcOptions BPXWDYN creation options for creating 'source' type data sets psbgen_loadDatasets Comma separated list of 'load module' type data sets psbgen_loadOptions BPXWDYN creation options for 'load module' type data sets psbgen_tempOptions BPXWDYN creation options for temporary data sets psbgen_compileErrorFeedbackXmlOptions BPXWDYN creation options for SYSXMLSD data set psbgen_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. psbgen_pgm MVS program name of the high level assembler psbgen_linkEditor MVS program name of the link editor psbgen_deployType Deploy Type of build outputs"},{"location":"build-conf-README/#acbgenproperties","title":"ACBgen.properties","text":"<p>Build properties used by zAppBuild/language/PSBgen.groovy; ACBgen is part of the PSBgen process</p> Property Description acbgen_requiredBuildProperties Comma separated list of required build properties for language/PSBgen.groovy acbgen_psbPDS Dataset to of PSBgen output acbgen_dbdPDS Dataset to of DBDgen output acbgen_loadPDS Dataset to create acbgen modules acbgen_loadDatasets Comma separated list of 'load module' type data sets acbgen_loadOptions BPXWDYN creation options for 'load module' type data sets acbgen_tempOptions BPXWDYN creation options for temporary data sets acbgen_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. acbgen_pgm MVS program name of the acbgen pgm acbgen_deployType Deploy Type of build outputs"},{"location":"build-conf-README/#zunitconfigproperties","title":"ZunitConfig.properties","text":"<p>Build properties used by zAppBuild/language/ZunitConfig.groovy</p> Property Description zunit_bzucfgPDS Dataset to move BZUCFG files to from USS zunit_bzureportPDS Dataset where BZUCRPT files are stored zunit_bzuplayPDS Dataset to move zUnit Playback files to from USS zunit_srcDatasets Comma separated list of 'source' type data sets zunit_srcOptions BPXWDYN creation options for creating 'source' type data sets zunit_loadDatasets Comma separated list of 'load module' type data sets zunit_loadOptions BPXWDYN creation options for creating 'load module' type data sets zunit_reportDatasets Comma separated list of 'report' type data sets zunit_reportOptions BPXWDYN creation options for creating 'report' type data sets zunit_dependenciesDatasetMapping DBB property mapping to map dependencies to different target datasets"},{"location":"build-conf-README/#zcee3properties","title":"zCEE3.properties","text":"<p>Application properties used by zAppBuild/language/zCEE3.groovy</p> Property Description zcee3_shellEnvironment Shell environment used to run the gradle command zcee3_gradlePath Path to gradle executable zcee3_gradle_JAVA_OPTS JAVA Options used with gradle"},{"location":"build-conf-README/#crbproperties","title":"CRB.properties","text":"<p>Application properties used by zAppBuild/language/CRB.groovy</p> <p>zAppBuild contains the CICS Resource Builder resource model YAML and the CICS Resource Builder application constraints YAML for the MortgageApplication sample in  build-conf/cicsResourceBuilderConfigurations</p> Property Description crb_requiredBuildProperties Comma separated list of required build properties for language/CRB.groovy crb_zrbLocation Absolute path to the CICS Resource Builder utility (zrb) on z/OS crb_resourceModelFile Absolute path to the CICS Resource Builder resource model YAML file on z/OS crb_applicationConstraintsFile (Optional) Absolute path to the CICS Resource Builder application constraints YAML file on z/OS"},{"location":"build-conf-README/#transferproperties","title":"Transfer.properties","text":"<p>Build properties used by zAppBuild/language/Transfer.groovy</p> Property Description transfer_requiredBuildProperties Comma separated list of required build properties for language/Transfer.groovy transfer_srcPDS Dataset of any type of source transfer_jclPDS Sample dataset for JCL members transfer_xmlPDS Sample dataset for xml members transfer_srcOptions BPXWDYN creation options for creating 'source' type data sets transfer_outputDatasets \u00a0List of output datasets to document deletions ** Can be overridden by a file property. ** If used for multiple, use a file property to set transfer_outputDatasets"},{"location":"build-conf-README/#language-conflanguageconfigprops01properties","title":"language-conf/languageConfigProps01.properties","text":"<p>Sample language configuration properties file used by dbb-zappbuild/utilities/BuildUtilities.groovy.</p> <p>This is a custom properties file to override file properties for a group of files, based on mapping defined in <code>zAppBuild/samples/application-conf/languageConfigurationMapping.properties</code>. Multiple language configuration properties files can be defined and mapped against different file groups in <code>zAppBuild/samples/application-conf/languageConfigurationMapping.properties</code>.</p> <p>Note: The name of this property file need not be <code>languageConfigProps01.properties</code>. Any name can be given to this property file and can use the same name while mapping source file in <code>zAppBuild/samples/application-conf/languageConfigurationMapping.properties</code>.</p>"},{"location":"languages-README/","title":"Language Build Scripts","text":"<p>zAppBuild comes with a number of language specific build scripts.  These script are designed to be invoked by <code>build.groovy</code> and should not be invoked directly as they require the initialized environment provided by <code>build.groovy</code>.</p>"},{"location":"languages-README/#included-language-scripts","title":"Included Language Scripts","text":"<ul> <li>Assembler.groovy</li> <li>BMS.groovy</li> <li>Cobol.groovy</li> <li>LinkEdit.groovy (for building link cards)</li> <li>PLI.groovy</li> <li>DBDgen.groovy</li> <li>PSBgen.groovy</li> <li>MFS.groovy</li> <li>zCEE3.groovy</li> <li>ZunitConfig.groovy</li> </ul> <p>All language scripts both compile and optionally link-edit programs. The language build scripts are intended to be useful out of the box but depending on the complexity of your applications' build requirements, may require modifications to meet your development team's needs.  By following the examples used in the existing language build scripts of keeping all application specific references out of the build scripts and instead using configuration properties with strong default values, the zAppBuild sample can continue to be a generic build solution for all of your specific applications.</p>"},{"location":"languages-README/#convention-for-properties-for-language-scripts","title":"Convention for properties for language scripts","text":"<p>Central properties files for languages scripts are managed in build-conf referencing the name of the language script - such as <code>Cobol.properties</code>. These files contain dataset naming conventions and allocation options. Properties that may be application specific and may be overridden are managed as the group of application-conf properties files either centrally configured via the <code>applicationConfRootDir</code> property in build-conf/build.properties or as part of the application repository - see samples/application-conf/.  </p> <p>All properties for language scripts are defined by prefixing the property with a <code>language prefix</code> - e.q. <code>cobol_</code> to group and identify properties belonging to the Cobol.groovy languages script. The language prefix is computed based on the lower-case basename of the name of the language script, respectively until the first <code>_</code> character in the name of the language script. </p>"},{"location":"languages-README/#script-mappings","title":"Script Mappings","text":"<p>Source files are mapped to language scripts via script mapping file properties. Though script mappings can be defined at any level, zAppBuild relegates script mapping declarations to the application configuration folder (see samples/application-conf/file.properties allowing the application owner to determine what is best for the application. </p>"},{"location":"samples-MortgageApplication-README/","title":"MortgageApplication","text":"<p>This version of the MortgageApplication sample is designed to be built by zAppBuild. </p> <p>Example showing how to build all programs in MortgageApplication <pre><code>$DBB_HOME/bin/groovyz build.groovy --workspace /u/build/repos/dbb-zappbuild/samples --application MortgageApplication --outDir /u/build/out --hlq BUILD.MORTAPP --fullBuild\n</code></pre> See BUILD.md for additional information about building applications using zAppBuild.</p>"},{"location":"test-README/","title":"zAppBuild/test","text":"<p>Test folder is designed to help test samples like the Mortgage Application against ZAppBuild.</p>"},{"location":"test-README/#repository-legend","title":"Repository Legend","text":"Folder/File Description Documentation Link applications/MortgageApplication This folder contains modified language scripts used to execute impact build by replacing these modified files with the original language files MortgageApplication applications/HelloWorld This folder contains sample programs for Assembler HelloWorld test.groovy This is the main build script that is called to start the test process test.groovy testScripts This folder contains test scripts to execute full and impact builds testScripts"},{"location":"test-README/#testing-applications-with-zappbuild","title":"Testing Applications with zAppBuild","text":"<p>The main script for testing applications against zAppBuild is <code>test.groovy</code>. It takes most of its input from the command line to run full and impact builds. <code>test.groovy</code> once executed from the command line calls fullBuild.groovy and impactBuild.groovy scripts to perform an end to end test on the given feature branch with the program specified for impact build. </p> <p>test.groovy script has five required arguments that must be present during each invocation:</p> <ul> <li>\u2013branch  - zAppBuild branch to test <li>\u2013app  - Application that is being tested (example: MortgageApplication) <li>\u2013hlq  - HLQ for dataset reation / deletion (example: USER.BUILD) <p>test.groovy script has three optional argument that can be present during each invocation</p> <ul> <li>\u2013pw  - DBB Web Application user password <li>\u2013pwFile  - DBB Web Application user password file <li>\u2013verbose  - Flag indicating to print trace statements <li>\u2013propFiles  - Absolute path to the location of the datasets.properties and other configuration files. <li>\u2013outDir  - Absolute path to out directory"},{"location":"test-README/#examples-of-running-an-end-to-end-test","title":"Examples of running an end to end test:","text":"<p>It is recommended to leverage the <code>--propFiles</code> to pass in any environment specific property files for your environment, such as the <code>dataset.properties</code>, the <code>build.properties</code> to configure the Metadatastore connection.  This avoids that you need to commit any environment specific configuration to the branch: </p> <pre><code>$DBB_HOME/bin/groovyz ${repoPath}/test/test.groovy  \\ \n                      --branch testBranch   \\ \n\t\t\t\t\t  --app MortgageApplication  \\ \n\t\t\t\t\t  --hlq USER.BUILD  \\ \n\t\t\t\t\t  --url jdbc:db2://system1.company.com:5040/DBB1  \\ \n\t\t\t\t\t  --id JDBCID  \\ \n\t\t\t\t\t  --pwFile /var/dbb/pwdFile.txt  \\ \n\t\t\t\t\t  --propFiles /pathToDatasets/datasets.properties  \\ \n\t\t\t\t\t  --outDir /pathToOutDir/out\n</code></pre>"},{"location":"test-README/#examples-of-outputs-to-be-expected","title":"Examples of outputs to be expected:","text":"<p>Successful test run <pre><code>.. &lt;test properties&gt;\n** Creating and checking out branch zAppBuildTesting\nYour branch is up to date with 'origin/testBranch'.\nOn branch zAppBuildTesting\nnothing to commit, working tree clean\n\n** Invoking test scripts according to test list order: resetBuild.groovy,fullBuild.groovy,fullBuild_debug.groovy,resetBuild.groovy\n\n**************************************************************\n** Executing test script resetBuild.groovy\n**************************************************************\n** DBB_HOME = /usr/lpp/dbb/v2r0\n** Executing /usr/lpp/dbb/v2r0/bin/groovyz /u/ibmuser/test-zapp/dbb-zappbuild/build.groovy --workspace /u/ibmuser/test-zapp/dbb-zappbuild/test/applications --application HelloWorld --outDir /u/ibmuser/test-zapp-app-out/testframework_out --hlq USER.DBB.TEST.BUILD --logEncoding UTF-8 --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id ibmuser  --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/ibmuser.properties --reset\n** Validating reset build\n**\n** RESET OF THE BUILD : PASSED **\n**\n\n**************************************************************\n** Executing test script fullBuild.groovy\n**************************************************************\n** DBB_HOME = /usr/lpp/dbb/v2r0\n** Executing /usr/lpp/dbb/v2r0/bin/groovyz /u/ibmuser/test-zapp/dbb-zappbuild/build.groovy --workspace /u/ibmuser/test-zapp/dbb-zappbuild/test/applications --application HelloWorld --outDir /u/ibmuser/test-zapp-app-out/testframework_out --hlq USER.DBB.TEST.BUILD --logEncoding UTF-8 --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id ibmuser  --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/ibmuser.properties --fullBuild\n** Validating full build results\n**\n** FULL BUILD TEST : PASSED **\n**\n\n** Deleting build PDSEs [ASM, MACRO, DBRM, OBJ, LOAD]\n** Deleting 'USER.DBB.TEST.BUILD.ASM'\n** Deleting 'USER.DBB.TEST.BUILD.MACRO'\n** Deleting 'USER.DBB.TEST.BUILD.DBRM'\n** Deleting 'USER.DBB.TEST.BUILD.OBJ'\n** Deleting 'USER.DBB.TEST.BUILD.LOAD'\n\n**************************************************************\n** Executing test script fullBuild_debug.groovy\n**************************************************************\n** DBB_HOME = /usr/lpp/dbb/v2r0\n** Executing /usr/lpp/dbb/v2r0/bin/groovyz /u/ibmuser/test-zapp/dbb-zappbuild/build.groovy --workspace /u/ibmuser/test-zapp/dbb-zappbuild/test/applications --application HelloWorld --outDir /u/ibmuser/test-zapp-app-out/testframework_out --hlq USER.DBB.TEST.BUILD --logEncoding UTF-8 --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id ibmuser  --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/ibmuser.properties --fullBuild --debug\n** Validating full build results\n**\n** FULL BUILD TEST : PASSED **\n**\n\n** Deleting build PDSEs [ASM, MACRO, DBRM, OBJ, LOAD, SYSADATA, EQALANGX]\n** Deleting 'USER.DBB.TEST.BUILD.ASM'\n** Deleting 'USER.DBB.TEST.BUILD.MACRO'\n** Deleting 'USER.DBB.TEST.BUILD.DBRM'\n** Deleting 'USER.DBB.TEST.BUILD.OBJ'\n** Deleting 'USER.DBB.TEST.BUILD.LOAD'\n** Deleting 'USER.DBB.TEST.BUILD.SYSADATA'\n** Deleting 'USER.DBB.TEST.BUILD.EQALANGX'\n\n**************************************************************\n** Executing test script resetBuild.groovy\n**************************************************************\n** DBB_HOME = /usr/lpp/dbb/v2r0\n** Executing /usr/lpp/dbb/v2r0/bin/groovyz /u/ibmuser/test-zapp/dbb-zappbuild/build.groovy --workspace /u/ibmuser/test-zapp/dbb-zappbuild/test/applications --application HelloWorld --outDir /u/ibmuser/test-zapp-app-out/testframework_out --hlq USER.DBB.TEST.BUILD --logEncoding UTF-8 --url jdbc:db2://10.3.20.201:4740/MOPDBC0 --id ibmuser  --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/ibmuser.properties --reset\n** Validating reset build\n**\n** RESET OF THE BUILD : PASSED **\n**\n\n** Deleting test branch zAppBuildTesting\nHEAD is now at 68f9a2d make the credentials optional\nYour branch is up to date with 'origin/testBranch'.\nDeleted branch zAppBuildTesting (was 68f9a2d).\nOn branch testBranch\nYour branch is up to date with 'origin/testBranch'.\n\nnothing to commit, working tree clean\n\n\n================================================================================================\n* ZAPPBUILD TESTFRAMEWORK COMPLETED.\n   All tests (resetBuild.groovy,fullBuild.groovy,fullBuild_debug.groovy,resetBuild.groovy) completed successfully.\n================================================================================================\n** Build finished\n</code></pre></p> <p>When an error is detected, the test framework will print the entire log of the failed test (failed assertion) for the analysis by the build script engineer:</p> <pre><code>...\n** Executing test script impactBuild_renaming.groovy\n** DBB_HOME = /usr/lpp/dbb/v2r0\n** Rename cobol/epscsmrt.cbl to cobol/epscsmr2.cbl\n\n** Running impact after renaming file cobol/epscsmrt.cbl to cobol/epscsmr2.cbl\n** Executing /usr/lpp/dbb/v2r0/bin/groovyz /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build.groovy --workspace /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples --application MortgageApplication --outDir /var/jenkins/workspace/dbb-zappbuild-testframework-withParms/logs_testframework_MortgageApp --hlq JENKINS.DBB.TEST.BUILD.T367ENHA --logEncoding UTF-8 --url jdbc:db2:somelocation --id DBEHM --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/dbb-db2-metadatastore-jenkins.properties --impactBuild\n** Validating impact build results\nDeleting impact build PDSEs [BMS, COBOL, LINK, COPY, BMS.COPY, DBRM, LOAD, MFS, OBJ, TFORMAT]\n\n***\n**START OF FAILED IMPACT BUILD TEST RESULTS**\n\n*FAILED IMPACT BUILD TEST RESULTS*\n[*! IMPACT BUILD FOR cobol/epscsmrt.cbl TOTAL FILES PROCESSED ARE NOT EQUAL TO 1\nOUTPUT STREAM:\n\n** Build start at 20230615.012609.026\n** Input args = /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples --application MortgageApplication --outDir /var/jenkins/workspace/dbb-zappbuild-testframework-withParms/logs_testframework_MortgageApp --hlq JENKINS.DBB.TEST.BUILD.T367ENHA --logEncoding UTF-8 --url jdbc:db2:somelocation --id DBEHM --pwFile /var/dbb/config/db2-pwd-file.xml --verbose --propFiles /var/dbb/dbb-zappbuild-config/build.properties,/var/dbb/dbb-zappbuild-config/datasets.properties,/var/dbb/dbb-zappbuild-config/dbb-db2-metadatastore-jenkins.properties --impactBuild\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/datasets.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/dependencyReport.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/Assembler.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/BMS.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/MFS.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/PSBgen.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/DBDgen.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/ACBgen.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/Cobol.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/LinkEdit.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/PLI.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/REXX.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/ZunitConfig.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/Transfer.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/build-conf/defaultzAppBuildConf.properties\n** appConf = /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf/file.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf/BMS.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf/Cobol.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf/LinkEdit.properties\n** Loading property file /ZT01/var/jenkins/workspace/dbb-zappbuild-testframework-withParms/samples/MortgageApplication/application-conf/languageConfigurationMapping.properties\n</code></pre>"},{"location":"test-README/#command-line-options-summary","title":"Command Line Options Summary","text":"<pre><code>utility arguments:\n-h, --help      Shows usage information, like above\n-v, --verbose   Flag indicating to print trace statements\n\t   \ntest framework arguments:\n-b, --branch    zAppBuild branch to test, required\n\nzAppBuild arguments:\n-a, --app       Application that is being tested (example: MortgageApplication), required\n-q, --hlq       HLQ for dataset reation / deletion (example: USER.BUILD), required\n-u, --url       Db2 JDBC URL for the MetadataStore.\n            \tExample: jdbc:db2:&lt;Db2 server location&gt;\n-i, --id        Db2 user id for the MetadataStore\n-p, --pw        Db2 password (encrypted with DBB Password Utility) for the MetadataStore\n-P, --pwFile    Absolute or relative (from workspace) path to file containing Db2 password\n-f, --propFiles Absolute path to the location of the datasets.properties \n-o, --outDir    Absolute path to out directory\n</code></pre>"},{"location":"utilities-README/","title":"Utility Files","text":"<p>This folder contains common utility and helper files used by the zAppBuild <code>build.groovy</code> script and language scripts.</p> File Description BindUtilities.groovy Use for the DB2 binding. BuildReportUtilities.groovy Helper to populate additional build report entries. BuildUtilities.groovy Common build utility methods. DependencyScannerUtilities.groovy Populates the DependencyScannerRegistry and returns the mapped dependency scanner for a build file. FilePropUtilities.groovy Helper util to load and validate file level properties overrides. GitUtilities.groovy Git command methods. ImpactUtilities.groovy Methods used for ImpactBuilds."}]}